{"ast":null,"code":"var _jsxFileName = \"D:\\\\220\\\\src\\\\components\\\\content\\\\m_sertifikasi\\\\edit_sertifikasi.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport apiconfig from \"../../../config/api.config.json\";\nimport Select from 'react-select';\n\nclass editsertifikasi extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChange = selectedOption => {\n      this.setState({\n        selecteValue: selectedOption.value\n      });\n      let tmp = this.state.formdata;\n      tmp[\"valid_start_year\"] = selectedOption.value;\n    };\n\n    this.handleOnChange2 = selectedOption2 => {\n      this.setState({\n        selecteValue2: selectedOption2.value\n      });\n      let tmp = this.state.formdata;\n      tmp[\"valid_start_month\"] = selectedOption2.value;\n    };\n\n    this.handleOnChange3 = selectedOption3 => {\n      this.setState({\n        selecteValue3: selectedOption3.value\n      });\n      let tmp = this.state.formdata;\n      tmp[\"until_year\"] = selectedOption3.value;\n    };\n\n    this.handleOnChange4 = selectedOption4 => {\n      this.setState({\n        selecteValue4: selectedOption4.value\n      });\n      let tmp = this.state.formdata;\n      tmp[\"until_month\"] = selectedOption4.value;\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      event.target.className += \" was-validated\";\n      const isValid = this.validate();\n\n      if (isValid == false) {\n        alert(this.state.formdata.nameError);\n      } else {\n        let token = localStorage.getItem(apiconfig.ls.token);\n        let userdata = JSON.parse(localStorage.getItem(apiconfig.ls.x_sertifikasi));\n        alert(JSON.stringify(userdata[0].id));\n        let tmp = this.state.formdata;\n        tmp[\"modified_by\"] = userdata[0].id;\n        tmp[\"biodata_id\"] = 1;\n        this.setState({\n          formdata: tmp\n        });\n        let option = {\n          url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.x_sertifikasi,\n          method: \"put\",\n          headers: {\n            Authorization: token,\n            \"Content-Type\": \"application/json\"\n          },\n          data: this.state.formdata\n        };\n        axios(option).then(response => {\n          if (response.data.code == 200) {\n            alert(\"Sukses\");\n            this.props.sertifikasistatus();\n            alert(JSON.stringify(this.state.formdata));\n            this.history.push(\"/home\");\n          } else {\n            alert(response.data.message);\n          }\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    };\n\n    const year = new Date().getFullYear();\n    this.years = Array.from(new Array(50), (val, index) => year - index); // let userdata = JSON.parse(localStorage.getItem(apiConfig.LS.USERDATA))\n\n    this.state = {\n      formdata: {\n        id: '',\n        create_by: '',\n        create_on: '',\n        modified_by: '',\n        modified_on: '',\n        deleted_by: '',\n        deleted_on: '',\n        is_delete: '',\n        biodata_id: '',\n        certificate_name: '',\n        publisher: \"\",\n        valid_start_year: \"\",\n        valid_start_month: \"\",\n        until_year: \"\",\n        until_month: \"\",\n        notes: '' //update_by:userdata.username\n\n      },\n      selectedOption: {},\n      selectedOption2: {},\n      selectedOption3: {},\n      selectedOption4: {},\n      selecteValue: {},\n      selecteValue2: {},\n      selecteValue3: {},\n      selecteValue4: {}\n    };\n    this.submitHandler = this.submitHandler.bind(this);\n    this.changeHandler = this.changeHandler.bind(this);\n    this.handleOnChange = this.handleOnChange.bind(this);\n    this.handleOnChange2 = this.handleOnChange.bind(this);\n    this.handleOnChange3 = this.handleOnChange.bind(this);\n    this.handleOnChange4 = this.handleOnChange.bind(this);\n  } // handleChange1 = (selectedOption) => {\n  //   this.setState({selectValue: selectedOption.value});\n  //   let tmp = this.state.formdata\n  //   tmp[\"skill_level_id\"] = selectedOption.value\n  // }\n\n\n  getlist_sertifikasi() {\n    let token = localStorage.getItem(apiconfig.ls.token);\n    let option = {\n      url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.x_sertifikasi,\n      method: \"get\",\n      headers: {\n        \"authorization\": token\n      }\n    };\n    axios(option).then(response => {\n      let tmp = [];\n      response.data.message.map(row => {\n        tmp.push({\n          value: row.valid_start_year,\n          label: row.valid_start_year,\n          value: row.valid_start_month,\n          label: row.valid_start_month,\n          value: row.until_year,\n          label: row.until_year,\n          value: row.until_month,\n          label: row.valid_month\n        });\n      });\n      this.setState({\n        list_sertifikasi: tmp,\n        x_sertifikasi: response.data.message\n      });\n    }).catch(error => {\n      alert(error);\n    });\n  }\n\n  componentDidMount() {\n    this.getlist_sertifikasi();\n  }\n\n  validate() {\n    let nameError = \"\";\n\n    if (!this.state.formdata.certificate_name || !this.state.formdata.publisher || !this.state.formdata.valid_start_year || !this.state.formdata.exit_year) {\n      nameError = \"Anda Harus Mengisi Semua Field\";\n    }\n\n    if (nameError) {\n      this.state.formdata.nameError = nameError; // alert(nameError)\n\n      return false;\n    }\n\n    return true;\n  }\n\n  componentWillReceiveProps(newprops) {\n    this.setState({\n      formdata: newprops.list_sertifikasi,\n      selectValue: this.props.list_sertifikasi.valid_start_year,\n      selectValue2: this.props.list_sertifikasi.valid_start_month,\n      selectValue3: this.props.list_sertifikasi.until_year,\n      selectValue4: this.props.list_sertifikasi.until_month\n    });\n  }\n\n  changeHandler(e) {\n    let tmp = this.state.formdata;\n    tmp[e.target.name] = e.target.value;\n    tmp[\"valid_start_year\"] = this.state.selectedOption.value;\n    tmp[\"valid_start_month\"] = this.state.selectedOption2.value;\n    tmp[\"until_year\"] = this.state.selectedOption3.value;\n    tmp[\"until_month\"] = this.state.selectedOption4.value;\n    this.setState({\n      formdata: tmp\n    });\n  } //     submitHandler(){\n  //       let token = localStorage.getItem(apiconfig.ls.token)\n  //         let options = {\n  //           url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.x_sertifikasi, \n  //             method: 'put',\n  //             header:{\n  //                 'Authorization': token,\n  //                 'Content-Type' : 'application/json'\n  //             },\n  //             data:this.state.formdata\n  //         }\n  //         axios (options)\n  //         .then((response) => {\n  //             if(response.data.code === 200){\n  //                 alert (\"Sukses\")\n  //                 this.props.sertifikasistatus()\n  //             } else {\n  //               alert(response.data.message)\n  //           }\n  //         })\n  //     .catch((error) => {\n  //         console.log(error)\n  //     })\n  // }\n\n\n  render() {\n    let tmp_year = [];\n    this.years.map(row => {\n      tmp_year.push({\n        value: row,\n        label: row\n      });\n    });\n    const options1 = tmp_year; //let {productsList} =  this.state;\n\n    const options3 = tmp_year; // const options1 = this.state.list_sertifikasi;\n    // const options2 = this.state.list_sertifikasi;\n    // const options3 = this.state.list_sertifikasi;\n    // const options4 = this.state.list_sertifikasi;\n\n    const month_options1 = [{\n      value: \"1\",\n      label: \"January\"\n    }, {\n      value: \"2\",\n      label: \"Febuary\"\n    }, {\n      value: \"3\",\n      label: \"Maret\"\n    }, {\n      value: \"4\",\n      label: \"April\"\n    }, {\n      value: \"5\",\n      label: \"Mei\"\n    }, {\n      value: \"6\",\n      label: \"Juni\"\n    }, {\n      value: \"7\",\n      label: \"Juli\"\n    }, {\n      value: \"8\",\n      label: \"Agustus\"\n    }, {\n      value: \"9\",\n      label: \"September\"\n    }, {\n      value: \"10\",\n      label: \"Ocktober\"\n    }, {\n      value: \"11\",\n      label: \"November\"\n    }, {\n      value: \"12\",\n      label: \"Desember\"\n    }];\n    const month_options2 = [{\n      value: \"1\",\n      label: \"January\"\n    }, {\n      value: \"2\",\n      label: \"Febuary\"\n    }, {\n      value: \"3\",\n      label: \"Maret\"\n    }, {\n      value: \"4\",\n      label: \"April\"\n    }, {\n      value: \"5\",\n      label: \"Mei\"\n    }, {\n      value: \"6\",\n      label: \"Juni\"\n    }, {\n      value: \"7\",\n      label: \"Juli\"\n    }, {\n      value: \"8\",\n      label: \"Agustus\"\n    }, {\n      value: \"9\",\n      label: \"September\"\n    }, {\n      value: \"10\",\n      label: \"Ocktober\"\n    }, {\n      value: \"11\",\n      label: \"November\"\n    }, {\n      value: \"12\",\n      label: \"Desember\"\n    }];\n    return React.createElement(Modal, {\n      isOpen: this.props.edit,\n      className: this.props.className,\n      className: \"modal-dialog modal-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      className: \"modal-title text-white\",\n      style: {\n        backgroundColor: '#00008B'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"Edit Sertifikasi\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-lg-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"Certificate Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      name: \"certificate_name\",\n      value: this.state.formdata.certificate_name,\n      onChange: this.changeHandler,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"col-lg-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"Penerbit\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      name: \"publisher\",\n      onChange: this.changeHandler,\n      value: this.state.formdata.publisher,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"Mulai Dari\")), React.createElement(\"div\", {\n      class: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \"Sampai Dengan\"))), React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(Select, {\n      name: \"valid_start_year\" //value={this.state.selectedOption.valid_start_year}\n      ,\n      value: options1.filter(({\n        value\n      }) => value == this.props.list_sertifikasi.valid_start_year),\n      onChange: this.handleChange1,\n      options: options1,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(Select, {\n      name: \"valid_start_month\" // value={this.state.selectedOption2.valid_start_month}\n      ,\n      value: month_options1.filter(({\n        value\n      }) => value === this.props.list_sertifikasi.valid_start_month),\n      onChange: this.handleChange2,\n      options: month_options1,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(Select, {\n      name: \"until_year\" //value={this.state.selectedOption2.until_year}\n      ,\n      value: options3.filter(({\n        value\n      }) => value == this.props.list_sertifikasi.until_year),\n      onChange: this.handleChange3,\n      options: options3,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(Select, {\n      name: \"until_month\" //value={this.state.selectedOption4.until_month}\n      ,\n      value: month_options2.filter(({\n        value\n      }) => value == this.props.list_sertifikasi.until_month),\n      onChange: this.handleChange4,\n      options: month_options2,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, \"Notes\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      name: \"notes\",\n      value: this.state.formdata.notes,\n      onChange: this.changeHandler,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    })), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        backgroundColor: '#FFA500'\n      },\n      onClick: this.props.sertifikasistatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, \"Close\"), React.createElement(Button, {\n      style: {\n        backgroundColor: '#00008B'\n      },\n      onClick: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, \"Save\"))));\n  }\n\n}\n\nexport default editsertifikasi;","map":{"version":3,"sources":["D:/220/src/components/content/m_sertifikasi/edit_sertifikasi.js"],"names":["React","axios","Modal","ModalHeader","ModalBody","ModalFooter","Button","apiconfig","Select","editsertifikasi","Component","constructor","props","handleOnChange","selectedOption","setState","selecteValue","value","tmp","state","formdata","handleOnChange2","selectedOption2","selecteValue2","handleOnChange3","selectedOption3","selecteValue3","handleOnChange4","selectedOption4","selecteValue4","submitHandler","event","preventDefault","target","className","isValid","validate","alert","nameError","token","localStorage","getItem","ls","userdata","JSON","parse","x_sertifikasi","stringify","id","option","url","BASE_URL","ENDPOINTS","method","headers","Authorization","data","then","response","code","sertifikasistatus","history","push","message","catch","error","console","log","year","Date","getFullYear","years","Array","from","val","index","create_by","create_on","modified_by","modified_on","deleted_by","deleted_on","is_delete","biodata_id","certificate_name","publisher","valid_start_year","valid_start_month","until_year","until_month","notes","bind","changeHandler","getlist_sertifikasi","map","row","label","valid_month","list_sertifikasi","componentDidMount","exit_year","componentWillReceiveProps","newprops","selectValue","selectValue2","selectValue3","selectValue4","e","name","render","tmp_year","options1","options3","month_options1","month_options2","edit","backgroundColor","filter","handleChange1","handleChange2","handleChange3","handleChange4"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport axios from \"axios\"\r\nimport {Modal,ModalHeader,ModalBody,ModalFooter, Button} from \"reactstrap\"\r\nimport apiconfig from \"../../../config/api.config.json\"\r\nimport Select from 'react-select'\r\n\r\n\r\nclass editsertifikasi extends React.Component{\r\n    constructor (props){\r\n        super(props)\r\n        const year = new Date().getFullYear()\r\n        this.years = Array.from(new Array(50), (val, index) => year - index)\r\n       // let userdata = JSON.parse(localStorage.getItem(apiConfig.LS.USERDATA))\r\n        this.state = {\r\n            formdata : {\r\n                id:'',\r\n                create_by:'',\r\n                create_on:'',\r\n                modified_by:'',\r\n                modified_on:'',\r\n                deleted_by:'',\r\n                deleted_on:'',\r\n                is_delete:'',\r\n                biodata_id: '',\r\n                certificate_name:'',\r\n                publisher: \"\",\r\n                valid_start_year: \"\",\r\n                valid_start_month: \"\",\r\n                until_year: \"\",\r\n                until_month: \"\",\r\n                notes:''\r\n                //update_by:userdata.username\r\n            },\r\n            selectedOption: {},\r\n             selectedOption2: {},\r\n             selectedOption3: {},\r\n             selectedOption4: {},\r\n             selecteValue: {},\r\n             selecteValue2: {},\r\n             selecteValue3: {},\r\n             selecteValue4: {}\r\n\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this)\r\n        this.changeHandler = this.changeHandler.bind(this)\r\n        this.handleOnChange = this.handleOnChange.bind(this)\r\n        this.handleOnChange2 = this.handleOnChange.bind(this)\r\n        this.handleOnChange3 = this.handleOnChange.bind(this)\r\n        this.handleOnChange4 = this.handleOnChange.bind(this)\r\n    }\r\n    // handleChange1 = (selectedOption) => {\r\n    //   this.setState({selectValue: selectedOption.value});\r\n    //   let tmp = this.state.formdata\r\n    //   tmp[\"skill_level_id\"] = selectedOption.value\r\n    // }\r\n    handleOnChange=(selectedOption) => {\r\n      this.setState({ selecteValue: selectedOption.value });\r\n      let tmp = this.state.formdata\r\n      tmp[\"valid_start_year\"] = selectedOption.value\r\n  }\r\n  handleOnChange2=(selectedOption2) => {\r\n    this.setState({ selecteValue2: selectedOption2.value });\r\n    let tmp = this.state.formdata\r\n    tmp[\"valid_start_month\"] = selectedOption2.value\r\n}\r\nhandleOnChange3=(selectedOption3) => {\r\n  this.setState({ selecteValue3: selectedOption3.value });\r\n  let tmp = this.state.formdata\r\n  tmp[\"until_year\"] = selectedOption3.value\r\n}\r\nhandleOnChange4=(selectedOption4) => {\r\n  this.setState({ selecteValue4: selectedOption4.value });\r\n  let tmp = this.state.formdata\r\n  tmp[\"until_month\"] = selectedOption4.value\r\n}\r\n\r\ngetlist_sertifikasi() {\r\n  let token = localStorage.getItem(apiconfig.ls.token);\r\n  let option = {\r\n    url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.x_sertifikasi, \r\n    method: \"get\",\r\n    headers: {\r\n      \"authorization\": token\r\n    }\r\n  };\r\naxios(option)\r\n    .then(response => {\r\n      let tmp = [];\r\n\r\n      response.data.message.map(row => {\r\n        tmp.push({\r\n          value: row.valid_start_year,\r\n          label: row.valid_start_year,\r\n          value: row.valid_start_month,\r\n          label: row.valid_start_month,\r\n          value: row.until_year,\r\n          label: row.until_year,\r\n          value: row.until_month,\r\n          label: row.valid_month\r\n        });\r\n      });\r\n      this.setState({\r\n        list_sertifikasi: tmp,\r\n        x_sertifikasi: response.data.message\r\n      });\r\n    })\r\n    .catch(error => {\r\n      alert(error);\r\n    });\r\n}\r\n\r\n      componentDidMount() {\r\n        this.getlist_sertifikasi()\r\n      }\r\n\r\n      validate() {\r\n        let nameError = \"\";\r\n        if (\r\n          !this.state.formdata.certificate_name ||\r\n          !this.state.formdata.publisher ||\r\n          !this.state.formdata.valid_start_year ||\r\n          !this.state.formdata.exit_year\r\n        ) {\r\n          nameError = \"Anda Harus Mengisi Semua Field\";\r\n        }\r\n    \r\n        if (nameError) {\r\n          this.state.formdata.nameError = nameError;\r\n          // alert(nameError)\r\n          return false;\r\n        }\r\n        return true;\r\n      }\r\n\r\n      componentWillReceiveProps(newprops) {\r\n        this.setState({\r\n            formdata : newprops.list_sertifikasi,\r\n            selectValue: this.props.list_sertifikasi.valid_start_year,\r\n            selectValue2: this.props.list_sertifikasi.valid_start_month,\r\n            selectValue3: this.props.list_sertifikasi.until_year,\r\n            selectValue4: this.props.list_sertifikasi.until_month\r\n        })\r\n    }\r\n\r\n    changeHandler(e) {\r\n      let tmp = this.state.formdata\r\n      tmp[e.target.name] = e.target.value\r\n      tmp[\"valid_start_year\"] = this.state.selectedOption.value\r\n     tmp[\"valid_start_month\"] = this.state.selectedOption2.value\r\n     tmp[\"until_year\"] = this.state.selectedOption3.value\r\n     tmp[\"until_month\"] = this.state.selectedOption4.value\r\n      this.setState({\r\n          formdata: tmp\r\n          \r\n      })\r\n\r\n  }\r\n\r\n//     submitHandler(){\r\n//       let token = localStorage.getItem(apiconfig.ls.token)\r\n//         let options = {\r\n//           url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.x_sertifikasi, \r\n//             method: 'put',\r\n//             header:{\r\n//                 'Authorization': token,\r\n//                 'Content-Type' : 'application/json'\r\n//             },\r\n//             data:this.state.formdata\r\n//         }\r\n//         axios (options)\r\n//         .then((response) => {\r\n//             if(response.data.code === 200){\r\n//                 alert (\"Sukses\")\r\n//                 this.props.sertifikasistatus()\r\n//             } else {\r\n//               alert(response.data.message)\r\n//           }\r\n          \r\n//         })\r\n\r\n//     .catch((error) => {\r\n//         console.log(error)\r\n//     })\r\n// }\r\nsubmitHandler = event => {\r\n  event.preventDefault();\r\n  event.target.className += \" was-validated\";\r\n  const isValid = this.validate();\r\n\r\n  if (isValid == false) {\r\n    alert(this.state.formdata.nameError);\r\n  } else {\r\n    let token = localStorage.getItem(apiconfig.ls.token);\r\n    let userdata = JSON.parse(localStorage.getItem(apiconfig.ls.x_sertifikasi));\r\n\r\n    alert(JSON.stringify(userdata[0].id));\r\n    let tmp = this.state.formdata;\r\n    tmp[\"modified_by\"] = userdata[0].id;\r\n    tmp[\"biodata_id\"] = 1;\r\n    this.setState({\r\n      formdata: tmp\r\n    });\r\n\r\n    let option = {\r\n      url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.x_sertifikasi, \r\n      method: \"put\",\r\n      headers: {\r\n        Authorization: token,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      data: this.state.formdata\r\n    };\r\n\r\n    axios(option)\r\n      .then(response => {\r\n        if (response.data.code == 200) {\r\n          alert(\"Sukses\");\r\n          this.props.sertifikasistatus();\r\n          alert(JSON.stringify(this.state.formdata));\r\n\r\n          this.history.push(\"/home\");\r\n        } else {\r\n          alert(response.data.message);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n};\r\n\r\nrender (){\r\n  let tmp_year =[]\r\n  this.years.map(row=> {\r\n    tmp_year.push({\r\n      value: row,\r\n      label: row\r\n    })\r\n  })\r\n    const options1 = tmp_year;\r\n    //let {productsList} =  this.state;\r\n\r\nconst options3 = tmp_year;\r\n// const options1 = this.state.list_sertifikasi;\r\n// const options2 = this.state.list_sertifikasi;\r\n// const options3 = this.state.list_sertifikasi;\r\n// const options4 = this.state.list_sertifikasi;\r\nconst month_options1 = [\r\n  { value: \"1\", label: \"January\" },\r\n  { value: \"2\", label: \"Febuary\" },\r\n  { value: \"3\", label: \"Maret\" },\r\n  { value: \"4\", label: \"April\" },\r\n  { value: \"5\", label: \"Mei\" },\r\n  { value: \"6\", label: \"Juni\" },\r\n  { value: \"7\", label: \"Juli\" },\r\n  { value: \"8\", label: \"Agustus\" },\r\n  { value: \"9\", label: \"September\" },\r\n  { value: \"10\", label: \"Ocktober\" },\r\n  { value: \"11\", label: \"November\" },\r\n  { value: \"12\", label: \"Desember\" }\r\n];\r\nconst month_options2 = [\r\n  { value: \"1\", label: \"January\" },\r\n  { value: \"2\", label: \"Febuary\" },\r\n  { value: \"3\", label: \"Maret\" },\r\n  { value: \"4\", label: \"April\" },\r\n  { value: \"5\", label: \"Mei\" },\r\n  { value: \"6\", label: \"Juni\" },\r\n  { value: \"7\", label: \"Juli\" },\r\n  { value: \"8\", label: \"Agustus\" },\r\n  { value: \"9\", label: \"September\" },\r\n  { value: \"10\", label: \"Ocktober\" },\r\n  { value: \"11\", label: \"November\" },\r\n  { value: \"12\", label: \"Desember\" }\r\n];\r\n    return(\r\n        <Modal isOpen = {this.props.edit} className={this.props.className} className = \"modal-dialog modal-lg\"> \r\n        <ModalHeader className = \"modal-title text-white\" style = {{backgroundColor:'#00008B'}}>Edit Sertifikasi</ModalHeader>\r\n        <ModalBody>\r\n                {/* <form role=\"form\"> */}\r\n               \r\n                <div class=\"row\">\r\n                <div class=\"col-lg-6\">\r\n           \r\n              <label>Certificate Name</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"certificate_name\"\r\n                value={this.state.formdata.certificate_name}\r\n                onChange={this.changeHandler}\r\n                required\r\n              />\r\n              </div>\r\n          \r\n              <div class=\"col-lg-6\">\r\n              <label>Penerbit</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"publisher\"\r\n                onChange={this.changeHandler}\r\n                value={this.state.formdata.publisher}\r\n                required\r\n              />\r\n            </div>\r\n            </div>\r\n            <div class= \"row\">\r\n            <div class=\"col\">\r\n            <p>Mulai Dari</p>\r\n            </div>\r\n            <div class = \"col\">\r\n              <p>Sampai Dengan</p>\r\n              \r\n              </div>\r\n              </div>\r\n            \r\n        {/* <p>Select one first</p>\r\n        <Select\r\n          name=\"kode_provinsi\"\r\n          value={this.state.selectedOption.valid_start_year}\r\n          onChange={this.handleChange1}\r\n          options={options1}\r\n          required\r\n        />\r\n        <p>Then the other</p>\r\n        <Select\r\n          name=\"kode_kota\"\r\n          value={this.state.selectedOption2.kode_kota}\r\n          onChange={this.handleChange2}\r\n          options={filteredOptions}\r\n          required\r\n        />\r\n      </div> */}\r\n           \r\n           <div class = \"row\">\r\n           <div class=\"col\">\r\n        \r\n        <Select\r\n          name=\"valid_start_year\"\r\n           //value={this.state.selectedOption.valid_start_year}\r\n          value={options1.filter(({value}) => value == this.props.list_sertifikasi.valid_start_year)}\r\n          onChange={this.handleChange1}\r\n          options = {options1}\r\n          required\r\n        />\r\n        </div>\r\n        <div class =\"col\">\r\n        \r\n        <Select\r\n          name=\"valid_start_month\"\r\n         // value={this.state.selectedOption2.valid_start_month}\r\n          value={month_options1.filter(({value}) => value === this.props.list_sertifikasi.valid_start_month)}\r\n          onChange={this.handleChange2}\r\n          options = {month_options1}\r\n          required\r\n        />\r\n        </div>\r\n      \r\n      <div class=\"col\">\r\n        \r\n        <Select\r\n          name=\"until_year\"\r\n          //value={this.state.selectedOption2.until_year}\r\n            value={options3.filter(({value}) => value == this.props.list_sertifikasi.until_year)}\r\n          onChange={this.handleChange3}\r\n          options = {options3}\r\n          required\r\n        />\r\n        </div>\r\n        \r\n        <div class=\"col\">\r\n        \r\n        <Select\r\n          name=\"until_month\"\r\n          //value={this.state.selectedOption4.until_month}\r\n          value={month_options2.filter(({value}) => value == this.props.list_sertifikasi.until_month)}\r\n          onChange={this.handleChange4}\r\n          options = {month_options2}\r\n          required\r\n        />\r\n      </div>\r\n      </div>\r\n    \r\n           <div class=\"form-group\">\r\n              <label>Notes</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"notes\"\r\n                value={this.state.formdata.notes}\r\n                onChange={this.changeHandler}\r\n                required\r\n              />\r\n            </div>\r\n                <ModalFooter>\r\n                    <Button style = {{backgroundColor:'#FFA500'}} onClick = {this.props.sertifikasistatus}>Close</Button>\r\n                    <Button style = {{backgroundColor:'#00008B'}}  onClick = {this.submitHandler} >Save</Button>\r\n                </ModalFooter>\r\n            </ModalBody>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n}\r\nexport default editsertifikasi"]},"metadata":{},"sourceType":"module"}