{"ast":null,"code":"var _jsxFileName = \"D:\\\\data\\\\frontend220\\\\src\\\\components\\\\content\\\\mahasiswa\\\\editmahasiswa.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport apiconfig from \"../../../config/api.config.json\";\nimport Select from 'react-select';\n\nclass editmahasiswa extends React.Component {\n  constructor(props) {\n    super(props); //let userdata = JSON.parse(localStorage.getItem(apiconfig.ls.userdata)) untuk update data\n\n    this.handleChange1 = selectedOption => {\n      this.setState({\n        selectedValue: selectedOption.value\n      });\n      let tmp = this.state.formdata;\n      tmp[\"kode_provinsi\"] = selectedop;\n    };\n\n    this.handleChange2 = selectedOption => {\n      this.setState({\n        selectedOption2: selectedOption\n      });\n    };\n\n    this.state = {\n      formdata: {\n        kode_mahasiswa: \"\",\n        nama_mahasiswa: \"\",\n        kode_kota: \"\",\n        kode_agama: \"\",\n        kode_jurusan: \"\",\n        kode_provinsi: \"\"\n      },\n      provinsi: [],\n      kota: [],\n      listKota: [],\n      listProvinsi: [],\n      selectedOption: {},\n      selectedOption2: {},\n      selectedValue: \"\",\n      selectedValue2: \"\"\n    };\n    this.submitHandler = this.submitHandler.bind(this);\n    this.changeHandler = this.changeHandler.bind(this);\n  }\n\n  getProvinsi() {\n    let token = localStorage.getItem(apiconfig.ls.token);\n    let option = {\n      url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.provinsi,\n      method: \"get\",\n      headers: {\n        Authorization: token\n      }\n    };\n    axios(option).then(response => {\n      let tmp = [];\n      response.data.message.map(row => {\n        tmp.push({\n          value: row.kode_provinsi,\n          label: row.nama_provinsi\n        });\n      });\n      this.setState({\n        listProvinsi: tmp,\n        provinsi: response.data.message\n      });\n    }).catch(error => {\n      alert(error);\n    });\n  }\n\n  getKota() {\n    let token = localStorage.getItem(apiconfig.ls.token);\n    let option = {\n      url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.kota,\n      method: \"get\",\n      headers: {\n        Authorization: token\n      }\n    };\n    axios(option).then(response => {\n      let tmp = [];\n      response.data.message.map(row => {\n        tmp.push({\n          value: row.kode_kota,\n          label: row.nama_kota,\n          link: row.kode_provinsi\n        });\n      });\n      this.setState({\n        listKota: tmp,\n        kota: response.data.message\n      }); //alert(this.state.kota);\n    }).catch(error => {\n      alert(error);\n    });\n  }\n\n  componentDidMount() {\n    this.getProvinsi();\n    this.getKota();\n  } // handleChange1 = (selectedOption) => {\n  //     this.setState({selectedOption});\n  //   };\n  //   handleChange2 = (selectedOption) => {\n  //     this.setState({selectedOption2: selectedOption})\n  //   }\n\n\n  componentWillReceiveProps(newProps) {\n    this.setState({\n      formdata: newProps.listmahasiswa\n    });\n  }\n\n  submitHandler() {\n    let token = localStorage.getItem(apiconfig.ls.token);\n    let option = {\n      url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.mahasiswa,\n      method: \"put\",\n      headers: {\n        \"Authorization\": token,\n        \"Content-Type\": \"application/json\"\n      },\n      data: this.state.formdata\n    };\n    axios(option).then(response => {\n      if (response.data.code === 200) {\n        alert(\"sukses\");\n        this.props.kodemahasiswastatus();\n        alert(JSON.stringify(this.state.formdata));\n      } else {\n        alert(response.data.message);\n      }\n    }).catch(error => {\n      alert(error);\n    });\n  }\n\n  changeHandler(e) {\n    let tmp = this.state.formdata;\n    tmp[e.target.name] = e.target.value;\n    tmp[\"kode_kota\"] = this.state.selectedOption2.value;\n    this.setState({\n      formdata: tmp\n    });\n  }\n\n  render() {\n    const options1 = this.state.listProvinsi;\n    const options2 = this.state.listKota;\n    const filteredOptions = options2.filter(o => o.link === this.state.selectedOption.value);\n    return React.createElement(Modal, {\n      isOpen: this.props.edit,\n      className: this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \" edit form\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      role: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Kode Mahasiswa\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      name: \"kode_mahasiswa\",\n      value: this.state.formdata.kode_mahasiswa,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Nama Mahasiswa\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      name: \"nama_mahasiswa\",\n      value: this.state.formdata.nama_mahasiswa,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Select one first\"), React.createElement(Select, {\n      name: \"form-field-name\",\n      value: this.state.selectedOption.kode_provinsi,\n      onChange: this.handleChange1,\n      options: options1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Then the other\"), React.createElement(Select, {\n      name: \"form-field-name\",\n      value: this.state.selectedOption2.kode_kota,\n      onChange: this.handleChange2,\n      options: filteredOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Kode Agama\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      name: \"kode_agama\",\n      value: this.state.formdata.kode_agama,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Kode Jurusan\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      name: \"kode_jurusan\",\n      value: this.state.formdata.kode_jurusan,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    })))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"save \"), React.createElement(Button, {\n      color: \"warning\",\n      onClick: this.props.kodemahasiswastatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \" Cancel\")));\n  }\n\n}\n\nexport default editmahasiswa;","map":{"version":3,"sources":["D:/data/frontend220/src/components/content/mahasiswa/editmahasiswa.js"],"names":["React","axios","Modal","ModalHeader","ModalBody","ModalFooter","Button","apiconfig","Select","editmahasiswa","Component","constructor","props","handleChange1","selectedOption","setState","selectedValue","value","tmp","state","formdata","selectedop","handleChange2","selectedOption2","kode_mahasiswa","nama_mahasiswa","kode_kota","kode_agama","kode_jurusan","kode_provinsi","provinsi","kota","listKota","listProvinsi","selectedValue2","submitHandler","bind","changeHandler","getProvinsi","token","localStorage","getItem","ls","option","url","BASE_URL","ENDPOINTS","method","headers","Authorization","then","response","data","message","map","row","push","label","nama_provinsi","catch","error","alert","getKota","nama_kota","link","componentDidMount","componentWillReceiveProps","newProps","listmahasiswa","mahasiswa","code","kodemahasiswastatus","JSON","stringify","e","target","name","render","options1","options2","filteredOptions","filter","o","edit","className"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport axios from \"axios\"\r\nimport {Modal,ModalHeader,ModalBody,ModalFooter, Button} from \"reactstrap\"\r\nimport apiconfig from \"../../../config/api.config.json\"\r\nimport Select from 'react-select'\r\n\r\n\r\nclass editmahasiswa extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        //let userdata = JSON.parse(localStorage.getItem(apiconfig.ls.userdata)) untuk update data\r\n        this.state = {\r\n            formdata: {\r\n                kode_mahasiswa: \"\",\r\n                nama_mahasiswa: \"\",\r\n                kode_kota: \"\",\r\n                kode_agama: \"\",\r\n                kode_jurusan: \"\",\r\n                kode_provinsi: \"\"\r\n                \r\n               \r\n             },\r\n             provinsi: [],\r\n             kota: [],\r\n             listKota: [],\r\n             listProvinsi: [],\r\n             selectedOption: {},\r\n             selectedOption2: {},\r\n             selectedValue: \"\",\r\n             selectedValue2: \"\"\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this)\r\n        this.changeHandler = this.changeHandler.bind(this)\r\n    }\r\n    handleChange1 = selectedOption => {\r\n        this.setState({ selectedValue: selectedOption.value });\r\n        let tmp = this.state.formdata\r\n        tmp [\"kode_provinsi\"] = selectedop\r\n      };\r\n      handleChange2 = selectedOption => {\r\n        this.setState({ selectedOption2: selectedOption });\r\n      };\r\n      getProvinsi() {\r\n        let token = localStorage.getItem(apiconfig.ls.token);\r\n        let option = {\r\n          url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.provinsi,\r\n          method: \"get\",\r\n          headers: {\r\n            Authorization: token\r\n          }\r\n        };\r\n    \r\n        axios(option)\r\n          .then(response => {\r\n            let tmp = [];\r\n    \r\n            response.data.message.map(row => {\r\n              tmp.push({\r\n                value: row.kode_provinsi,\r\n                label: row.nama_provinsi\r\n              });\r\n            });\r\n            this.setState({\r\n              listProvinsi: tmp,\r\n              provinsi: response.data.message\r\n            });\r\n          })\r\n          .catch(error => {\r\n            alert(error);\r\n          });\r\n      }\r\n    \r\n      getKota() {\r\n        let token = localStorage.getItem(apiconfig.ls.token);\r\n        let option = {\r\n          url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.kota,\r\n          method: \"get\",\r\n          headers: {\r\n            Authorization: token\r\n          }\r\n        };\r\n        axios(option)\r\n          .then(response => {\r\n            let tmp = [];\r\n            response.data.message.map(row => {\r\n              tmp.push({\r\n                value: row.kode_kota,\r\n                label: row.nama_kota,\r\n                link: row.kode_provinsi\r\n              });\r\n            });\r\n            this.setState({\r\n              listKota: tmp,\r\n              kota: response.data.message\r\n            });\r\n            //alert(this.state.kota);\r\n          })\r\n          .catch(error => {\r\n            alert(error);\r\n          });\r\n      }\r\n    \r\n      componentDidMount() {\r\n        this.getProvinsi();\r\n        this.getKota();\r\n      }\r\n    // handleChange1 = (selectedOption) => {\r\n    //     this.setState({selectedOption});\r\n    //   };\r\n    \r\n    //   handleChange2 = (selectedOption) => {\r\n    //     this.setState({selectedOption2: selectedOption})\r\n    //   }\r\n    \r\n    \r\n    \r\n    componentWillReceiveProps(newProps){\r\n        this.setState({\r\n            formdata: newProps.listmahasiswa\r\n        })\r\n    }\r\n    \r\n    submitHandler(){\r\n        let token = localStorage.getItem(apiconfig.ls.token)\r\n        let option = {\r\n            url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.mahasiswa,\r\n            method: \"put\",\r\n            headers:{\r\n                \"Authorization\": token,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: this.state.formdata\r\n        }\r\n        \r\n        axios(option)\r\n        .then((response) => {\r\n            if(response.data.code === 200){\r\n                alert(\"sukses\")\r\n                this.props.kodemahasiswastatus()\r\n                alert(JSON.stringify(this.state.formdata))\r\n            }\r\n            else {\r\n                alert(response.data.message)\r\n            }\r\n        })\r\n        .catch((error) => {\r\n        alert(error)\r\n         } )\r\n    }\r\n    changeHandler(e){\r\n        let tmp = this.state.formdata\r\n        tmp[e.target.name] = e.target.value\r\n        tmp[\"kode_kota\"] = this.state.selectedOption2.value\r\n        this.setState({\r\n            formdata: tmp\r\n        })\r\n    }\r\n    render(){\r\n        const options1 = this.state.listProvinsi;\r\n\r\n    const options2 = this.state.listKota;\r\n    \r\n    const filteredOptions = options2.filter(\r\n      o => o.link === this.state.selectedOption.value\r\n    );\r\n        return(\r\n            <Modal isOpen = {this.props.edit} className = {this.props.className}>\r\n                <ModalHeader> edit form</ModalHeader>\r\n                <ModalBody>\r\n                <form role=\"form\">\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Kode Mahasiswa</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"kode_mahasiswa\"\r\n                value={this.state.formdata.kode_mahasiswa}\r\n                onChange={this.changeHandler}\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Nama Mahasiswa</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"nama_mahasiswa\"\r\n                value={this.state.formdata.nama_mahasiswa}\r\n                onChange={this.changeHandler}\r\n              />\r\n            </div>\r\n            <div>\r\n        <p>Select one first</p>\r\n        <Select\r\n          name=\"form-field-name\"\r\n          value={this.state.selectedOption.kode_provinsi}\r\n          onChange={this.handleChange1}\r\n          options={options1}\r\n        />\r\n        <p>Then the other</p>\r\n        <Select\r\n          name=\"form-field-name\"\r\n          value={this.state.selectedOption2.kode_kota}\r\n          onChange={this.handleChange2}\r\n          options={filteredOptions}\r\n        />\r\n      </div>\r\n           \r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Kode Agama</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"kode_agama\"\r\n                value={this.state.formdata.kode_agama}\r\n                onChange={this.changeHandler}\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Kode Jurusan</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"kode_jurusan\"\r\n                value={this.state.formdata.kode_jurusan}\r\n                onChange={this.changeHandler}\r\n              />\r\n            </div>\r\n            {/* <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Kode provinsi</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"kode_provinsi\"\r\n                value={this.state.formdata.kode_provinsi}\r\n                onChange={this.changeHandler}\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">alamat</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"alamat\"\r\n                value={this.state.formdata.alamat}\r\n                onChange={this.changeHandler}\r\n              />\r\n            </div> */}\r\n          </form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color = \"primary\" onClick = {this.submitHandler} >save </Button>\r\n                    <Button color = \"warning\" onClick = {this.props.kodemahasiswastatus}> Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default editmahasiswa\r\n"]},"metadata":{},"sourceType":"module"}