{"ast":null,"code":"var _jsxFileName = \"D:\\\\220\\\\src\\\\components\\\\content\\\\m_sertifikasi\\\\edit_sertifikasi.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport apiconfig from \"../../../config/api.config.json\";\nimport Select from 'react-select';\n\nclass Editsertifikasi extends React.Component {\n  constructor(props) {\n    super(props); // let userdata = JSON.parse(localStorage.getItem(apiConfig.LS.USERDATA))\n\n    this.handleChange1 = selectedOption => {\n      this.setState({\n        selectValue: selectedOption.value\n      });\n      let tmp = this.state.formdata;\n      tmp[\"skill_level_id\"] = selectedOption.value;\n    };\n\n    this.state = {\n      formdata: {\n        id: '',\n        create_by: '',\n        create_on: '',\n        modified_by: '',\n        modified_on: '',\n        deleted_by: '',\n        deleted_on: '',\n        is_delete: '',\n        biodata_id: '',\n        certificate_name: '',\n        skill_level_id: '',\n        notes: '' //update_by:userdata.username\n\n      },\n      level: [],\n      listLevel: [],\n      selectedOption: {},\n      skilllevel: ''\n    };\n    this.submitHandler = this.submitHandler.bind(this);\n    this.changeHandler = this.changeHandler.bind(this);\n    this.handleChange1 = this.handleChange1.bind(this);\n  }\n\n  getLevel() {\n    let token = localStorage.getItem(apiconfig.LS.TOKEN);\n    let option = {\n      url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.LEVEL,\n      method: \"get\",\n      headers: {\n        \"authorization\": token\n      }\n    };\n    axios(option).then(response => {\n      let tmp = [];\n      response.data.message.map(row => {\n        tmp.push({\n          value: row.skill_level_id,\n          label: row.level_name\n        });\n      });\n      this.setState({\n        listLevel: tmp,\n        level: response.data.message\n      });\n    }).catch(error => {\n      alert(error);\n    });\n  }\n\n  componentDidMount() {\n    this.getLevel();\n  }\n\n  componentWillReceiveProps(newprops) {\n    this.setState({\n      formdata: newprops.listkeahlian,\n      selectValue: this.props.listkeahlian.skill_level_id\n    });\n  }\n\n  changeHandler(e) {\n    let tmp = this.state.formdata;\n    tmp[e.target.name] = e.target.value;\n    tmp['skill_level_id'] = this.state.selectedOption.value;\n    this.setState({\n      formdata: tmp\n    });\n  }\n\n  submitHandler() {\n    let token = localStorage.getItem(apiconfig.LS.TOKEN);\n    let option = {\n      url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.KEAHLIAN,\n      method: 'put',\n      header: {\n        'Authorization': token,\n        'Content-Type': 'application/json'\n      },\n      data: this.state.formdata\n    };\n    axios(option).then(response => {\n      if (response.data.code === 200) {\n        alert('Success');\n        this.props.modalStatus();\n      } else {\n        alert(response.data.message);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const options1 = this.state.listLevel;\n    return React.createElement(Modal, {\n      isOpen: this.props.edit,\n      className: this.props.className,\n      className: \"modal-dialog modal-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      className: \"modal-title text-white\",\n      style: {\n        backgroundColor: '#00008B'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Edit Keahlian\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"skill_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Nama Keahlian\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      name: \"skill_name\",\n      value: this.props.listkeahlian.skill_name,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"skill_level_id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \" Level Kemampuan : \"), React.createElement(Select, {\n      placeholder: \"Level Kemampuan\",\n      name: \"skill_level_id\",\n      value: options1.filter(({\n        value\n      }) => value === this.props.listkeahlian.skill_level_id),\n      onChange: this.handleChange1,\n      options: options1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Catatan\"), React.createElement(\"textarea\", {\n      class: \"form-control\",\n      name: \"notes\",\n      rows: \"5\",\n      id: \"comment\",\n      value: this.props.listkeahlian.notes,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        backgroundColor: '#FFA500'\n      },\n      onClick: this.props.modalStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Close\"), React.createElement(Button, {\n      style: {\n        backgroundColor: '#00008B'\n      },\n      onClick: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Save\"))));\n  }\n\n}\n\nexport default Editsertifikasi;","map":{"version":3,"sources":["D:/220/src/components/content/m_sertifikasi/edit_sertifikasi.js"],"names":["React","axios","Modal","ModalHeader","ModalBody","ModalFooter","Button","apiconfig","Select","Editsertifikasi","Component","constructor","props","handleChange1","selectedOption","setState","selectValue","value","tmp","state","formdata","id","create_by","create_on","modified_by","modified_on","deleted_by","deleted_on","is_delete","biodata_id","certificate_name","skill_level_id","notes","level","listLevel","skilllevel","submitHandler","bind","changeHandler","getLevel","token","localStorage","getItem","LS","TOKEN","option","url","BASE_URL","ENDPOINTS","LEVEL","method","headers","then","response","data","message","map","row","push","label","level_name","catch","error","alert","componentDidMount","componentWillReceiveProps","newprops","listkeahlian","e","target","name","KEAHLIAN","header","code","modalStatus","console","log","render","options1","edit","className","backgroundColor","skill_name","filter"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport axios from \"axios\"\r\nimport {Modal,ModalHeader,ModalBody,ModalFooter, Button} from \"reactstrap\"\r\nimport apiconfig from \"../../../config/api.config.json\"\r\nimport Select from 'react-select'\r\n\r\n\r\nclass Editsertifikasi extends React.Component{\r\n    constructor (props){\r\n        super(props)\r\n       // let userdata = JSON.parse(localStorage.getItem(apiConfig.LS.USERDATA))\r\n        this.state = {\r\n            formdata : {\r\n                id:'',\r\n                create_by:'',\r\n                create_on:'',\r\n                modified_by:'',\r\n                modified_on:'',\r\n                deleted_by:'',\r\n                deleted_on:'',\r\n                is_delete:'',\r\n                biodata_id: '',\r\n                certificate_name:'',\r\n                skill_level_id:'',\r\n                notes:''\r\n                //update_by:userdata.username\r\n            },\r\n            level: [],\r\n            listLevel: [],\r\n            selectedOption:{},\r\n            skilllevel: ''\r\n\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this)\r\n        this.changeHandler = this.changeHandler.bind(this)\r\n        this.handleChange1 = this.handleChange1.bind(this)\r\n    \r\n    }\r\n\r\n    handleChange1 = (selectedOption) => {\r\n        this.setState({selectValue: selectedOption.value});\r\n        let tmp = this.state.formdata\r\n        tmp[\"skill_level_id\"] = selectedOption.value\r\n      };\r\n\r\n      getLevel() {\r\n        let token = localStorage.getItem(apiconfig.LS.TOKEN);\r\n        let option = {\r\n          url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.LEVEL,\r\n          method: \"get\",\r\n          headers: {\r\n            \"authorization\": token\r\n          }\r\n        };\r\n    axios(option)\r\n          .then(response => {\r\n            let tmp = [];\r\n    \r\n            response.data.message.map(row => {\r\n              tmp.push({\r\n                value: row.skill_level_id,\r\n                label: row.level_name\r\n              });\r\n            });\r\n            this.setState({\r\n              listLevel: tmp,\r\n              level: response.data.message\r\n            });\r\n          })\r\n          .catch(error => {\r\n            alert(error);\r\n          });\r\n      }\r\n\r\n      componentDidMount() {\r\n        this.getLevel();\r\n      }\r\n\r\n\r\n      componentWillReceiveProps(newprops) {\r\n        this.setState({\r\n            formdata : newprops.listkeahlian,\r\n            selectValue: this.props.listkeahlian.skill_level_id,\r\n        })\r\n    }\r\n\r\n    changeHandler(e){\r\n        let tmp = this.state.formdata\r\n        tmp[e.target.name] = e.target.value\r\n        tmp['skill_level_id'] = this.state.selectedOption.value\r\n\r\n        this.setState({\r\n            formdata: tmp\r\n        })\r\n    }\r\n\r\n    submitHandler(){\r\n        let token = localStorage.getItem(apiconfig.LS.TOKEN)\r\n        let option = {\r\n            url:apiconfig.BASE_URL+apiconfig.ENDPOINTS.KEAHLIAN, method: 'put',\r\n            header:{\r\n                'Authorization': token,\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            data:this.state.formdata\r\n        }\r\n        axios(option)\r\n        .then((response) =>{\r\n            if(response.data.code === 200) {\r\n            alert('Success')\r\n            this.props.modalStatus()\r\n        } else {\r\n            alert(response.data.message)\r\n        }\r\n    })\r\n\r\n    .catch((error) => {\r\n        console.log(error)\r\n    })\r\n}\r\n\r\nrender (){\r\n    const options1 = this.state.listLevel;\r\n    return(\r\n        <Modal isOpen = {this.props.edit} className={this.props.className} className = \"modal-dialog modal-lg\"> \r\n        <ModalHeader className = \"modal-title text-white\" style = {{backgroundColor:'#00008B'}}>Edit Keahlian</ModalHeader>\r\n        <ModalBody>\r\n        <form>\r\n                  <div class=\"row\">\r\n                    <div class=\"col\">\r\n                      <label for=\"skill_name\">Nama Keahlian</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                name=\"skill_name\"\r\n                                value={this.props.listkeahlian.skill_name}\r\n                                onChange={this.changeHandler}\r\n                            />\r\n                        </div>\r\n                          <div class=\"col\">\r\n                          <label for=\"skill_level_id\"> Level Kemampuan : </label>\r\n                            <Select\r\n                            placeholder=\"Level Kemampuan\" \r\n                            name=\"skill_level_id\"\r\n                            value={options1.filter(({ value }) => value === this.props.listkeahlian.skill_level_id)}\r\n                            onChange={this.handleChange1}\r\n                            options={options1}\r\n                            />\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n\r\n                    <div class=\"form-group\">\r\n                    <label for=\"comment\">Catatan</label>\r\n                    <textarea class=\"form-control\" \r\n                    name=\"notes\"\r\n                    rows=\"5\" id=\"comment\"\r\n                    value={this.props.listkeahlian.notes}\r\n                    onChange={this.changeHandler}\r\n                    />\r\n                  </div>\r\n            {/* <form role=\"form\">\r\n                    <div class=\"form-group\">\r\n                    <label for=\"skill_name\">Skill Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        name=\"skill_name\"\r\n                        value={this.props.listkeahlian.skill_name}\r\n                        onChange = {this.changeHandler}\r\n                        />\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                    <label for=\"skill_level_id\"> Level Kemampuan : </label>\r\n                            <Select\r\n                            placeholder=\"Level Kemampuan\" \r\n                            name=\"skill_level_id\"\r\n                            value={options1.filter(({ value }) => value === this.props.listkeahlian.skill_level_id)}\r\n                            onChange={this.handleChange1}\r\n                            options={options1}\r\n                            />\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                    <label for=\"notes\">Notes</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        name=\"notes\"\r\n                        value={this.props.listkeahlian.notes}\r\n                        onChange = {this.changeHandler}\r\n                        />\r\n                    </div>\r\n\r\n                    </form> */}\r\n\r\n                <ModalFooter>\r\n                    <Button style = {{backgroundColor:'#FFA500'}} onClick = {this.props.modalStatus}>Close</Button>\r\n                    <Button style = {{backgroundColor:'#00008B'}} onClick = {this.submitHandler}>Save</Button>\r\n                </ModalFooter>\r\n            </ModalBody>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n}\r\nexport default Editsertifikasi"]},"metadata":{},"sourceType":"module"}