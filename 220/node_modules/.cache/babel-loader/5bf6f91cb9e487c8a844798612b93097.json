{"ast":null,"code":"var _jsxFileName = \"D:\\\\data\\\\frontend220\\\\src\\\\components\\\\login.js\";\nimport React from 'react';\nimport api from '../helper/api';\nimport config from '../config/api.config.json';\n\nclass login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formdata: {\n        username: '',\n        password: ''\n      },\n      inRequest: false\n    };\n    this.onSignIn = this.onSignIn.bind(this);\n    this.textchanged = this.textchanged.bind(this);\n  }\n\n  textchanged(e) {\n    let tmp = this.state.formdata;\n    tmp[e.target.mname] = e.target.value;\n    this.setState({\n      formdata: tmp\n    });\n  }\n\n  async onSignIn() {\n    this.setState({\n      inRequest: true\n    });\n    let result = await api.login(this.state.formdata.username, this.state.formdata.password);\n\n    if (result.code === 200) {\n      localStorage.setItem(config.ls.USERDATA, JSON.stringify(result.message.usedata));\n      localStorage.setItem(config.ls.token, result.message.token);\n      this.props.history.push('/home');\n    } else {\n      alert(result.message);\n    }\n\n    this.setState({\n      isRequest: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"text center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"from-signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"h3 mb-3 front widget-normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \" sign in\"), React.createElement(\"label\", {\n      for: \"inputemail\",\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \" email addres\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placefolder: \"username\",\n      required: \"\",\n      autofokus: \"\",\n      value: this.state.username,\n      onchange: this.Textchanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"inputnama\",\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"password\"), React.createElement(\"label\", {\n      type: \"password\",\n      className: \"form-control\",\n      placefolder: \"password\",\n      required: \"\",\n      value: this.state.m_password,\n      onchange: this.Textchanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-lg btn-primary btn-block\",\n      disable: this.state.isRequest,\n      type: \"button\",\n      onClik: this.onsignin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"sign in\"), React.createElement(\"p\", {\n      classname: \"mt-s nb3 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \" @2019 - 2020\")));\n  }\n\n}\n\nexport default login;","map":{"version":3,"sources":["D:/data/frontend220/src/components/login.js"],"names":["React","api","config","login","Component","constructor","props","state","formdata","username","password","inRequest","onSignIn","bind","textchanged","e","tmp","target","mname","value","setState","result","code","localStorage","setItem","ls","USERDATA","JSON","stringify","message","usedata","token","history","push","alert","isRequest","render","Textchanged","m_password","onsignin"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport api from '../helper/api'\r\nimport config from '../config/api.config.json'\r\n\r\nclass login extends React.Component{\r\nconstructor(props){\r\n    super(props)\r\n    this.state = {\r\n        formdata : {\r\n            username: '',\r\n            password: ''\r\n        },\r\n        inRequest: false\r\n    }\r\n    this.onSignIn = this.onSignIn.bind(this)\r\n    this.textchanged = this.textchanged.bind(this)\r\n}\r\ntextchanged(e){\r\n    let tmp = this.state.formdata\r\n    tmp[e.target.mname] = e.target.value\r\n    this.setState({\r\n        formdata: tmp\r\n    })\r\n}\r\nasync onSignIn(){\r\n    this.setState({\r\n        inRequest : true\r\n        })\r\n        let result = await api.login(this.state.formdata.username, this.state.formdata.password)\r\n        if (result.code === 200){\r\n        localStorage.setItem(config.ls.USERDATA, JSON.stringify(result.message.usedata ))\r\n        localStorage.setItem(config.ls.token, result.message.token)\r\n        this.props.history.push('/home')\r\n    }\r\n    else {alert(result.message)\r\n    }\r\n    this.setState({\r\n        isRequest:false\r\n    })\r\n}\r\n\r\n    render(){\r\n        return(\r\n            \r\n            <div className = \"text center\">\r\n            <form className = \"from-signin\">\r\n                <h1 className = \"h3 mb-3 front widget-normal\"> sign in</h1>\r\n                <label for = \"inputemail\" className = \"sr-only\"> email addres</label>\r\n                <input type = \"text\" className = \"form-control\" placefolder = \"username\" required = \"\" autofokus = \"\" value = { this.state.username}onchange={this.Textchanged} />\r\n                <label for = \"inputnama\" className = \"sr-only\">password</label>\r\n                <label type = \"password\" className = \"form-control\" placefolder = \"password\" required = \"\" value = { this.state.m_password}onchange={this.Textchanged} />\r\n                <button className = \"btn btn-lg btn-primary btn-block\" disable ={this.state.isRequest} type = \"button\" onClik = {this.onsignin}>sign in</button>\r\n                <p classname = \"mt-s nb3 text-muted\"> @2019 - 2020</p>        \r\n                </form>\r\n                </div>\r\n    \r\n                )\r\n            }\r\n}\r\nexport default login"]},"metadata":{},"sourceType":"module"}