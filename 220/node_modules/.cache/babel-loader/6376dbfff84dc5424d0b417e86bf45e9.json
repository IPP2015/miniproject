{"ast":null,"code":"var _jsxFileName = \"D:\\\\220\\\\src\\\\components\\\\content\\\\m_sertifikasi\\\\create_sertifikasi.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport apiconfig from \"../../../config/api.config.json\";\nimport Select from 'react-select';\n\nclass createsertifikasi extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange1 = selectedOption => {\n      this.setState({\n        selectedOption\n      });\n    };\n\n    this.handleChange2 = selectedOption => {\n      this.setState({\n        selectedOption2: selectedOption\n      });\n    };\n\n    this.changeHandler = event => {\n      let tmp = this.state.formdata;\n      tmp[event.target.name] = event.target.value;\n      tmp[\"kode_kota\"] = this.state.selectedOption2.value;\n      tmp[\"kode_provinsi\"] = this.state.selectedOption.value;\n      this.setState({\n        formdata: tmp\n      });\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      event.target.className += \" was-validated\";\n      const isValid = this.validate();\n\n      if (isValid == false) {//   alert(this.state.formdata.nameError)\n      } else {\n        let kota = this.state.selectedOption2.value;\n        let tmp = this.state.formdata;\n        tmp.kode_kota = kota;\n        this.setState({\n          formdata: tmp\n        });\n        let token = localStorage.getItem(apiconfig.ls.token);\n        let selectedProductsArray = this.state.productsList.filter((product, i) => {\n          return product.isChecked;\n        });\n        let stringHobi = '';\n        selectedProductsArray.map(row => {\n          if (stringHobi !== '') {\n            stringHobi = stringHobi + ', ' + row.name;\n          } else {\n            stringHobi = row.name;\n          }\n        });\n        tmp['hobi'] = stringHobi;\n        this.setState({\n          formdata: tmp\n        });\n        let option = {\n          url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.x_sertifikasi,\n          method: \"post\",\n          headers: {\n            \"Authorization\": token,\n            \"Content-Type\": \"application/json\"\n          },\n          data: this.state.formdata\n        };\n        axios(option).then(response => {\n          if (response.data.code === 200) {\n            alert(\"Sukses\");\n            this.props.sertifikasistatus(); // window.location.reload()\n          }\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    };\n\n    this.state = {\n      formdata: {\n        certificate_name: \"\",\n        publisher: \"\",\n        // name: 'React',\n        selectedOption: {},\n        selectedOption2: {},\n        valid_start_year: \"\",\n        valid_start_month: \"\",\n        until_year: \"\",\n        until_month: \"\",\n        notes: \"\",\n        namerror: \"\"\n      },\n      //  provinsi: [],\n      //  kota: [],\n      //  listKota: [],\n      //  listProvinsi: [],\n      selectedOption: {},\n      selectedOption2: {} //  productsList: []\n\n    };\n    this.submitHandler = this.submitHandler.bind(this);\n    this.changeHandler = this.changeHandler.bind(this);\n    this.handleOnChange = this.handleOnChange.bind(this);\n  } //   componentWillReceiveProps(newProps) {\n  //     this.setState({\n  //         productsList : newProps.productsList\n  //     })\n  // }\n  // onAddingItem = (i) => (event) => {\n  //   this.setState((state, props) => {\n  //     state.productsList[i].isChecked = !state.productsList[i].isChecked;\n  //     return {\n  //       productsList: state.productsList\n  //     }\n  //   })\n  // }\n\n\n  handleOnChange(values) {\n    this.setState({\n      values\n    });\n  }\n\n  changeHandler(e) {\n    let tmp = this.state.formdata;\n    tmp[e.target.name] = e.target.value;\n    this.setState({\n      formdata: tmp\n    });\n  }\n\n  getProvinsi() {\n    let token = localStorage.getItem(apiconfig.ls.token);\n    let option = {\n      url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.x_sertifikasi,\n      method: \"get\",\n      headers: {\n        Authorization: token\n      }\n    };\n    axios(option).then(response => {\n      let tmp = [];\n      response.data.message.map(row => {\n        tmp.push({\n          value: row.kode_provinsi,\n          label: row.nama_provinsi\n        });\n      });\n      this.setState({\n        listProvinsi: tmp,\n        provinsi: response.data.message\n      });\n    }).catch(error => {\n      alert(error);\n    });\n  }\n\n  getKota() {\n    let token = localStorage.getItem(apiconfig.ls.token);\n    let option = {\n      url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.x_sertifikasi,\n      method: \"get\",\n      headers: {\n        Authorization: token\n      }\n    };\n    axios(option).then(response => {\n      let tmp = [];\n      response.data.message.map(row => {\n        tmp.push({\n          value: row.kode_kota,\n          label: row.nama_kota,\n          link: row.kode_provinsi\n        });\n      });\n      this.setState({\n        listKota: tmp,\n        kota: response.data.message\n      }); //alert(this.state.kota);\n    }).catch(error => {\n      alert(error);\n    });\n  }\n\n  componentDidMount() {\n    this.getProvinsi();\n    this.getKota();\n  }\n\n  validate() {\n    let namerror = \"\";\n\n    if (!this.state.formdata.certificate_name || !this.state.formdata.publisher || !this.state.formdata.notes) {\n      namerror = \"Anda Harus Mengisi Semua Field\";\n    }\n\n    if (namerror) {\n      this.state.formdata.nameError = namerror; // alert(namerror)\n\n      return false;\n    }\n\n    return true;\n  }\n\n  // changeHandler(e){\n  //     let tmp = this.state.formdata\n  //     tmp[e.target.name] = e.target.value\n  //     tmp[\"kode_kota\"] = this.state.selectedOption2.value\n  //     tmp[\"kode_provinsi\"] = this.state.selectedOption.value\n  //     this.setState({\n  //         formdata: tmp\n  //     })\n  // }\n  // submitHandler(){\n  //     let token = localStorage.getItem(apiconfig.ls.token)\n  //     let option = {\n  //         url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.mahasiswa,\n  //         method: \"post\",\n  //         headers:{\n  //             \"Authorization\": token,\n  //             \"Content-Type\": \"application/json\"\n  //         },\n  //         data: this.state.formdata\n  //     }\n  //     axios(option)\n  //     .then((response) => {\n  //         if(response.data.code === 200){\n  //             alert(\"sukses\")\n  //             this.props.kodemahasiswastatus()\n  //             alert(JSON.stringify(this.state.formdata))\n  //         }\n  //     })\n  //     .catch((error) => {\n  //     alert(error)\n  //      } )\n  // }\n  render() {\n    const options1 = this.state.listProvinsi; //let {productsList} =  this.state;\n\n    const options2 = this.state.listKota;\n    return React.createElement(Modal, {\n      isOpen: this.props.create,\n      className: \"modal-dialog modal-xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      style: {\n        backgroundColor: \"#000066\",\n        color: \"#fff\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \" Tambah Sertifikasi\"), React.createElement(\"form\", {\n      className: \"needs-validation\",\n      onSubmit: this.submitHandler,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-lg-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"Certificate Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      name: \"certificate_name\",\n      value: this.state.formdata.certificate_name,\n      onChange: this.changeHandler,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"col-lg-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"Penerbit\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      name: \"publisher\",\n      onChange: this.changeHandler,\n      value: this.state.formdata.publisher,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \"Mulai Dari\")), React.createElement(\"div\", {\n      class: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, \"Sampai Dengan\"))), React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(Select, {\n      name: \"kode_provinsi\",\n      value: this.state.selectedOption.valid_start_year,\n      onChange: this.handleChange1,\n      options2: true,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(Select, {\n      name: \"valid_start_month\",\n      value: this.state.selectedOption2.valid_start_month,\n      onChange: this.handleChange2,\n      options2: true,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(Select, {\n      name: \"until_year\",\n      value: this.state.selectedOption.until_year,\n      onChange: this.handleChange1,\n      options2: true,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(Select, {\n      name: \"until_month\",\n      value: this.state.selectedOption2.until_month,\n      onChange: this.handleChange2,\n      options2: true,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, \"Notes\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      name: \"notes\",\n      value: this.state.formdata.notes,\n      onChange: this.changeHandler,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, \"save \"), React.createElement(Button, {\n      color: \"warning\",\n      onClick: this.props.sertifikasistatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, \" Cancel\"))));\n  }\n\n}\n\nexport default createsertifikasi;","map":{"version":3,"sources":["D:/220/src/components/content/m_sertifikasi/create_sertifikasi.js"],"names":["React","axios","Modal","ModalHeader","ModalBody","ModalFooter","Button","apiconfig","Select","createsertifikasi","Component","constructor","props","handleChange1","selectedOption","setState","handleChange2","selectedOption2","changeHandler","event","tmp","state","formdata","target","name","value","submitHandler","preventDefault","className","isValid","validate","kota","kode_kota","token","localStorage","getItem","ls","selectedProductsArray","productsList","filter","product","i","isChecked","stringHobi","map","row","option","url","BASE_URL","ENDPOINTS","x_sertifikasi","method","headers","data","then","response","code","alert","sertifikasistatus","catch","error","console","log","certificate_name","publisher","valid_start_year","valid_start_month","until_year","until_month","notes","namerror","bind","handleOnChange","values","e","getProvinsi","Authorization","message","push","kode_provinsi","label","nama_provinsi","listProvinsi","provinsi","getKota","nama_kota","link","listKota","componentDidMount","nameError","render","options1","options2","create","backgroundColor","color"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport axios from \"axios\"\r\nimport {Modal,ModalHeader,ModalBody,ModalFooter, Button} from \"reactstrap\"\r\nimport apiconfig from \"../../../config/api.config.json\"\r\nimport Select from 'react-select'\r\n\r\nclass createsertifikasi extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            formdata: {\r\n                certificate_name: \"\",\r\n                publisher: \"\",\r\n                \r\n                // name: 'React',\r\n                selectedOption: {},\r\n                selectedOption2: {},\r\n                valid_start_year: \"\",\r\n                valid_start_month: \"\",\r\n                until_year: \"\",\r\n                until_month: \"\",\r\n                notes: \"\",\r\n                namerror: \"\"\r\n        \r\n                \r\n                \r\n             },\r\n            //  provinsi: [],\r\n            //  kota: [],\r\n            //  listKota: [],\r\n            //  listProvinsi: [],\r\n            selectedOption: {},\r\n             selectedOption2: {},\r\n            //  productsList: []\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this)\r\n        this.changeHandler = this.changeHandler.bind(this)\r\n        this.handleOnChange = this.handleOnChange.bind(this)\r\n    }\r\n  //   componentWillReceiveProps(newProps) {\r\n  //     this.setState({\r\n  //         productsList : newProps.productsList\r\n  //     })\r\n\r\n  // }\r\n  // onAddingItem = (i) => (event) => {\r\n  //   this.setState((state, props) => {\r\n  //     state.productsList[i].isChecked = !state.productsList[i].isChecked;\r\n  //     return {\r\n  //       productsList: state.productsList\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n    handleOnChange(values) {\r\n        this.setState({ values });\r\n    }\r\n\r\n    changeHandler(e){\r\n        let tmp = this.state.formdata\r\n        tmp[e.target.name]=e.target.value\r\n        this.setState({\r\n            formdata : tmp\r\n        })\r\n}\r\n    handleChange1 = selectedOption => {\r\n     this.setState({ selectedOption });\r\n    };\r\n    \r\n    handleChange2 = selectedOption => {\r\n    this.setState({ selectedOption2: selectedOption });\r\n     };\r\n    \r\n      getProvinsi() {\r\n        let token = localStorage.getItem(apiconfig.ls.token);\r\n        let option = {\r\n          url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.x_sertifikasi,\r\n          method: \"get\",\r\n          headers: {\r\n            Authorization: token\r\n          }\r\n        };\r\n    \r\n        axios(option)\r\n          .then(response => {\r\n            let tmp = [];\r\n    \r\n            response.data.message.map(row => {\r\n              tmp.push({\r\n                value: row.kode_provinsi,\r\n                label: row.nama_provinsi\r\n              });\r\n            });\r\n            this.setState({\r\n              listProvinsi: tmp,\r\n              provinsi: response.data.message\r\n            });\r\n          })\r\n          .catch(error => {\r\n            alert(error);\r\n          });\r\n      }\r\n    \r\n      getKota() {\r\n        let token = localStorage.getItem(apiconfig.ls.token);\r\n        let option = {\r\n          url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.x_sertifikasi,\r\n          method: \"get\",\r\n          headers: {\r\n            Authorization: token\r\n          }\r\n        };\r\n        axios(option)\r\n          .then(response => {\r\n            let tmp = [];\r\n    \r\n            response.data.message.map(row => {\r\n              tmp.push({\r\n                value: row.kode_kota,\r\n                label: row.nama_kota,\r\n                link: row.kode_provinsi\r\n              });\r\n            });\r\n            this.setState({\r\n              listKota: tmp,\r\n              kota: response.data.message\r\n            });\r\n            //alert(this.state.kota);\r\n          })\r\n          .catch(error => {\r\n            alert(error);\r\n          });\r\n      }\r\n    \r\n      componentDidMount() {\r\n        this.getProvinsi();\r\n        this.getKota();\r\n      }\r\n      changeHandler= event => {\r\n        \r\n        let tmp = this.state.formdata\r\n        tmp[event.target.name] = event.target.value\r\n        tmp[\"kode_kota\"] = this.state.selectedOption2.value\r\n       tmp[\"kode_provinsi\"] = this.state.selectedOption.value\r\n        this.setState({\r\n            formdata: tmp\r\n            \r\n        })\r\n\r\n    }\r\n\r\n    validate() {\r\n\r\n        let namerror = \"\"\r\n\r\n        if (!this.state.formdata.certificate_name || !this.state.formdata.publisher || \r\n           !this.state.formdata.notes   ) {\r\n            namerror = \"Anda Harus Mengisi Semua Field\"\r\n        }\r\n\r\n        if (namerror) {\r\n            this.state.formdata.nameError = namerror\r\n           // alert(namerror)\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n\r\n    submitHandler= event => {\r\n        event.preventDefault();\r\n        event.target.className += \" was-validated\";\r\n        const isValid = this.validate()\r\n\r\n\r\n        if (isValid == false) {\r\n       //   alert(this.state.formdata.nameError)\r\n        }else {\r\n          let kota = this.state.selectedOption2.value\r\n          let tmp = this.state.formdata\r\n          tmp.kode_kota = kota\r\n          this.setState({\r\n              formdata : tmp\r\n        })\r\n        let token = localStorage.getItem(apiconfig.ls.token)\r\n        let selectedProductsArray = this.state.productsList.filter((product, i)=>{\r\n            return product.isChecked});\r\n        let stringHobi = ''\r\n        \r\n\r\n        selectedProductsArray.map((row) => {\r\n            if (stringHobi !== '') {\r\n                stringHobi = stringHobi +', ' + row.name\r\n            } else {\r\n                stringHobi = row.name\r\n            }\r\n        })\r\n\r\n        tmp['hobi'] = stringHobi\r\n        \r\n        this.setState({\r\n            formdata : tmp\r\n        })\r\n \r\n\r\n        \r\n        let option = {\r\n            url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.x_sertifikasi,\r\n            method: \"post\",\r\n            headers:{\r\n                \"Authorization\": token,\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            data: this.state.formdata\r\n        }\r\n        axios (option)\r\n        .then((response) => {\r\n            if(response.data.code === 200){\r\n                alert (\"Sukses\")\r\n                this.props.sertifikasistatus()\r\n                // window.location.reload()\r\n            }\r\n          \r\n        })\r\n        .catch((error)=> {\r\n            console.log(error)\r\n            \r\n        })\r\n    }\r\n  }\r\n    // changeHandler(e){\r\n    //     let tmp = this.state.formdata\r\n    //     tmp[e.target.name] = e.target.value\r\n    //     tmp[\"kode_kota\"] = this.state.selectedOption2.value\r\n    //     tmp[\"kode_provinsi\"] = this.state.selectedOption.value\r\n    //     this.setState({\r\n    //         formdata: tmp\r\n    //     })\r\n    // }\r\n    // submitHandler(){\r\n    //     let token = localStorage.getItem(apiconfig.ls.token)\r\n    //     let option = {\r\n    //         url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.mahasiswa,\r\n    //         method: \"post\",\r\n    //         headers:{\r\n    //             \"Authorization\": token,\r\n    //             \"Content-Type\": \"application/json\"\r\n    //         },\r\n    //         data: this.state.formdata\r\n    //     }\r\n    //     axios(option)\r\n    //     .then((response) => {\r\n    //         if(response.data.code === 200){\r\n    //             alert(\"sukses\")\r\n    //             this.props.kodemahasiswastatus()\r\n    //             alert(JSON.stringify(this.state.formdata))\r\n    //         }\r\n    //     })\r\n    //     .catch((error) => {\r\n    //     alert(error)\r\n    //      } )\r\n    // }\r\n    \r\n    render(){\r\n        const options1 = this.state.listProvinsi;\r\n        //let {productsList} =  this.state;\r\n    const options2 = this.state.listKota;\r\n    \r\n\r\n  \r\n          \r\n\r\n        return(\r\n            <Modal isOpen = {this.props.create}  className={\"modal-dialog modal-xl\"}>\r\n                <ModalHeader style={{backgroundColor: \"#000066\", color: \"#fff\" }}> Tambah Sertifikasi</ModalHeader>\r\n                        <form\r\n                  className=\"needs-validation\"\r\n                  onSubmit={this.submitHandler}\r\n                  noValidate\r\n                >\r\n                <ModalBody>\r\n                {/* <form role=\"form\"> */}\r\n               \r\n                <div class=\"row\">\r\n                <div class=\"col-lg-6\">\r\n           \r\n              <label>Certificate Name</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"certificate_name\"\r\n                value={this.state.formdata.certificate_name}\r\n                onChange={this.changeHandler}\r\n                required\r\n              />\r\n              </div>\r\n          \r\n              <div class=\"col-lg-6\">\r\n              <label>Penerbit</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"publisher\"\r\n                onChange={this.changeHandler}\r\n                value={this.state.formdata.publisher}\r\n                required\r\n              />\r\n            </div>\r\n            </div>\r\n            <div class= \"row\">\r\n            <div class=\"col\">\r\n            <p>Mulai Dari</p>\r\n            </div>\r\n            <div class = \"col\">\r\n              <p>Sampai Dengan</p>\r\n              \r\n              </div>\r\n              </div>\r\n            \r\n        {/* <p>Select one first</p>\r\n        <Select\r\n          name=\"kode_provinsi\"\r\n          value={this.state.selectedOption.valid_start_year}\r\n          onChange={this.handleChange1}\r\n          options={options1}\r\n          required\r\n        />\r\n        <p>Then the other</p>\r\n        <Select\r\n          name=\"kode_kota\"\r\n          value={this.state.selectedOption2.kode_kota}\r\n          onChange={this.handleChange2}\r\n          options={filteredOptions}\r\n          required\r\n        />\r\n      </div> */}\r\n           \r\n           <div class = \"row\">\r\n           <div class=\"col\">\r\n        \r\n        <Select\r\n          name=\"kode_provinsi\"\r\n          value={this.state.selectedOption.valid_start_year}\r\n          onChange={this.handleChange1}\r\n          options2\r\n          required\r\n        />\r\n        </div>\r\n        <div class =\"col\">\r\n        \r\n        <Select\r\n          name=\"valid_start_month\"\r\n          value={this.state.selectedOption2.valid_start_month}\r\n          onChange={this.handleChange2}\r\n          options2\r\n          required\r\n        />\r\n        </div>\r\n      \r\n      <div class=\"col\">\r\n        \r\n        <Select\r\n          name=\"until_year\"\r\n          value={this.state.selectedOption.until_year}\r\n          onChange={this.handleChange1}\r\n          options2\r\n          required\r\n        />\r\n        </div>\r\n        \r\n        <div class=\"col\">\r\n        \r\n        <Select\r\n          name=\"until_month\"\r\n          value={this.state.selectedOption2.until_month}\r\n          onChange={this.handleChange2}\r\n          options2\r\n          required\r\n        />\r\n      </div>\r\n      </div>\r\n    \r\n           <div class=\"form-group\">\r\n              <label>Notes</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"notes\"\r\n                value={this.state.formdata.notes}\r\n                onChange={this.changeHandler}\r\n                required\r\n              />\r\n            </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color = \"primary\" onClick = {this.submitHandler} >save </Button>\r\n                    <Button color = \"warning\" onClick = {this.props.sertifikasistatus}> Cancel</Button>\r\n                   \r\n                </ModalFooter>\r\n                </form>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nexport default createsertifikasi"]},"metadata":{},"sourceType":"module"}