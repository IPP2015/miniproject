{"ast":null,"code":"var _jsxFileName = \"D:\\\\220\\\\src\\\\components\\\\content\\\\m_sertifikasi\\\\create_sertifikasi.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport apiconfig from \"../../../config/api.config.json\";\nimport Select from 'react-select';\n\nclass createsertifikasi extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      event.target.className += \" was-validated\";\n      const isValid = this.validate();\n\n      if (isValid == false) {//   alert(this.state.formdata.nameError)\n      } else {\n        let kota = this.state.selectedOption2.value;\n        let tmp = this.state.formdata;\n        tmp.kode_kota = kota;\n        this.setState({\n          formdata: tmp\n        });\n        let token = localStorage.getItem(apiconfig.ls.token);\n        let selectedProductsArray = this.state.productsList.filter((product, i) => {\n          return product.isChecked;\n        });\n        let stringHobi = '';\n        selectedProductsArray.map(row => {\n          if (stringHobi !== '') {\n            stringHobi = stringHobi + ', ' + row.name;\n          } else {\n            stringHobi = row.name;\n          }\n        });\n        tmp['hobi'] = stringHobi;\n        this.setState({\n          formdata: tmp\n        });\n        let option = {\n          url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.x_sertifikasi,\n          method: \"post\",\n          headers: {\n            \"Authorization\": token,\n            \"Content-Type\": \"application/json\"\n          },\n          data: this.state.formdata\n        };\n        axios(option).then(response => {\n          if (response.data.code === 200) {\n            alert(\"Sukses\");\n            this.props.sertifikasistatus(); // window.location.reload()\n          }\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    };\n\n    this.state = {\n      formdata: {\n        certificate_name: \"\",\n        publisher: \"\",\n        // name: 'React',\n        // selectedOption: {},\n        // selectedOption2: {},\n        valid_start_year: \"\",\n        valid_start_month: \"\",\n        until_year: \"\",\n        until_month: \"\",\n        notes: \"\",\n        namerror: \"\"\n      } //  provinsi: [],\n      //  kota: [],\n      //  listKota: [],\n      //  listProvinsi: [],\n      //  selectedOption: {},\n      //  selectedOption2: {},\n      //  productsList: []\n\n    };\n    this.submitHandler = this.submitHandler.bind(this);\n    this.changeHandler = this.changeHandler.bind(this);\n    this.handleOnChange = this.handleOnChange.bind(this);\n  } //   componentWillReceiveProps(newProps) {\n  //     this.setState({\n  //         productsList : newProps.productsList\n  //     })\n  // }\n  // onAddingItem = (i) => (event) => {\n  //   this.setState((state, props) => {\n  //     state.productsList[i].isChecked = !state.productsList[i].isChecked;\n  //     return {\n  //       productsList: state.productsList\n  //     }\n  //   })\n  // }\n\n\n  handleOnChange(values) {\n    this.setState({\n      values\n    });\n  }\n\n  changeHandler(e) {\n    let tmp = this.state.formdata;\n    tmp[e.target.name] = e.target.value;\n    this.setState({\n      formdata: tmp\n    });\n  } // handleChange1 = selectedOption => {\n  //     this.setState({ selectedOption });\n  //   };\n  //   handleChange2 = selectedOption => {\n  //     this.setState({ selectedOption2: selectedOption });\n  //   };\n  //   getProvinsi() {\n  //     let token = localStorage.getItem(apiconfig.ls.token);\n  //     let option = {\n  //       url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.provinsi,\n  //       method: \"get\",\n  //       headers: {\n  //         Authorization: token\n  //       }\n  //     };\n  //     axios(option)\n  //       .then(response => {\n  //         let tmp = [];\n  //         response.data.message.map(row => {\n  //           tmp.push({\n  //             value: row.kode_provinsi,\n  //             label: row.nama_provinsi\n  //           });\n  //         });\n  //         this.setState({\n  //           listProvinsi: tmp,\n  //           provinsi: response.data.message\n  //         });\n  //       })\n  //       .catch(error => {\n  //         alert(error);\n  //       });\n  //   }\n  // getKota() {\n  //   let token = localStorage.getItem(apiconfig.ls.token);\n  //   let option = {\n  //     url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.kota,\n  //     method: \"get\",\n  //     headers: {\n  //       Authorization: token\n  //     }\n  //   };\n  //   axios(option)\n  //     .then(response => {\n  //       let tmp = [];\n  //       response.data.message.map(row => {\n  //         tmp.push({\n  //           value: row.kode_kota,\n  //           label: row.nama_kota,\n  //           link: row.kode_provinsi\n  //         });\n  //       });\n  //       this.setState({\n  //         listKota: tmp,\n  //         kota: response.data.message\n  //       });\n  //       //alert(this.state.kota);\n  //     })\n  //     .catch(error => {\n  //       alert(error);\n  //     });\n  // }\n  // componentDidMount() {\n  //   this.getProvinsi();\n  //   this.getKota();\n  // }\n  //   changeHandler= event => {\n  //     let tmp = this.state.formdata\n  //     tmp[event.target.name] = event.target.value\n  //     tmp[\"kode_kota\"] = this.state.selectedOption2.value\n  //    tmp[\"kode_provinsi\"] = this.state.selectedOption.value\n  //     this.setState({\n  //         formdata: tmp\n  //     })\n  // }\n  // validate() {\n  //     let namerror = \"\"\n  //     if (!this.state.formdata.kode_mahasiswa || !this.state.formdata.nama_mahasiswa || \n  //        !this.state.formdata.kode_agama || !this.state.formdata.kode_jurusan || \n  //        !this.state.formdata.jenis_kelamin   ) {\n  //         namerror = \"Anda Harus Mengisi Semua Field\"\n  //     }\n  //     if (namerror) {\n  //         this.state.formdata.nameError = namerror\n  //        // alert(namerror)\n  //         return false\n  //     }\n  //     return true\n  // }\n\n\n  // changeHandler(e){\n  //     let tmp = this.state.formdata\n  //     tmp[e.target.name] = e.target.value\n  //     tmp[\"kode_kota\"] = this.state.selectedOption2.value\n  //     tmp[\"kode_provinsi\"] = this.state.selectedOption.value\n  //     this.setState({\n  //         formdata: tmp\n  //     })\n  // }\n  // submitHandler(){\n  //     let token = localStorage.getItem(apiconfig.ls.token)\n  //     let option = {\n  //         url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.mahasiswa,\n  //         method: \"post\",\n  //         headers:{\n  //             \"Authorization\": token,\n  //             \"Content-Type\": \"application/json\"\n  //         },\n  //         data: this.state.formdata\n  //     }\n  //     axios(option)\n  //     .then((response) => {\n  //         if(response.data.code === 200){\n  //             alert(\"sukses\")\n  //             this.props.kodemahasiswastatus()\n  //             alert(JSON.stringify(this.state.formdata))\n  //         }\n  //     })\n  //     .catch((error) => {\n  //     alert(error)\n  //      } )\n  // }\n  render() {\n    const options1 = this.state.listProvinsi;\n    let productsList = this.state.productsList;\n    const options2 = this.state.listKota;\n    const filteredOptions = options2.filter(o => o.link === this.state.selectedOption.value);\n    return React.createElement(Modal, {\n      isOpen: this.props.create,\n      className: this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \" create form\"), React.createElement(\"form\", {\n      className: \"needs-validation\",\n      onSubmit: this.submitHandler,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"Kode Mahasiswa\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      name: \"kode_mahasiswa\",\n      value: this.state.formdata.kode_mahasiswa,\n      onChange: this.changeHandler,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"Nama Mahasiswa\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      name: \"nama_mahasiswa\",\n      value: this.state.formdata.nama_mahasiswa,\n      onChange: this.changeHandler,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"Select one first\"), React.createElement(Select, {\n      name: \"kode_provinsi\",\n      value: this.state.selectedOption.kode_provinsi,\n      onChange: this.handleChange1,\n      options: options1,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \"Then the other\"), React.createElement(Select, {\n      name: \"kode_kota\",\n      value: this.state.selectedOption2.kode_kota,\n      onChange: this.handleChange2,\n      options: filteredOptions,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, \"Kode Agama\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      name: \"kode_agama\",\n      value: this.state.formdata.kode_agama,\n      onChange: this.changeHandler,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, \"Kode Jurusan\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      name: \"kode_jurusan\",\n      value: this.state.formdata.kode_jurusan,\n      onChange: this.changeHandler,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      md: \"4\",\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-control custom-radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      className: \"custom-control-input\",\n      id: \"jeniskelamin1\",\n      name: \"jenis_kelamin\",\n      required: true,\n      value: \"Laki-laki\",\n      checked: this.state.formdata.jenis_kelamin === 'Laki-laki',\n      onChange: this.changeHandler,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"jeniskelamin1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, \"Laki-laki\")), React.createElement(\"div\", {\n      className: \"custom-control custom-radio mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      className: \"custom-control-input\",\n      id: \"jeniskelamin2\",\n      name: \"jenis_kelamin\",\n      value: \"perempuan\",\n      checked: this.state.formdata.jenis_kelamin === 'perempuan',\n      onChange: this.changeHandler,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"jeniskelamin2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, \"Perempuan\"), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, \"More example invalid feedback text\")), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, \"Hobi\"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, productsList.map((product, i) => {\n      return React.createElement(\"tr\", {\n        key: i + 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, i + 1), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, product.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"checkbox checkbox-circle checkbox-color-scheme\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        class: \"checkbox-checked\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        value: product.name,\n        checked: product.isChecked,\n        onChange: this.onAddingItem(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      })))));\n    })))))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      type: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, \"save \"), React.createElement(Button, {\n      color: \"warning\",\n      onClick: this.props.kodemahasiswastatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, \" Cancel\"))));\n  }\n\n}\n\nexport default createmahasiswa;","map":{"version":3,"sources":["D:/220/src/components/content/m_sertifikasi/create_sertifikasi.js"],"names":["React","axios","Modal","ModalHeader","ModalBody","ModalFooter","Button","apiconfig","Select","createsertifikasi","Component","constructor","props","submitHandler","event","preventDefault","target","className","isValid","validate","kota","state","selectedOption2","value","tmp","formdata","kode_kota","setState","token","localStorage","getItem","ls","selectedProductsArray","productsList","filter","product","i","isChecked","stringHobi","map","row","name","option","url","BASE_URL","ENDPOINTS","x_sertifikasi","method","headers","data","then","response","code","alert","sertifikasistatus","catch","error","console","log","certificate_name","publisher","valid_start_year","valid_start_month","until_year","until_month","notes","namerror","bind","changeHandler","handleOnChange","values","e","render","options1","listProvinsi","options2","listKota","filteredOptions","o","link","selectedOption","create","kode_mahasiswa","nama_mahasiswa","kode_provinsi","handleChange1","handleChange2","kode_agama","kode_jurusan","jenis_kelamin","onAddingItem","kodemahasiswastatus","createmahasiswa"],"mappings":"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A;AACA;;;AAEEE,EAAAA,cAAc,CAACC,MAAD,EAAS;AACnB,SAAK3C,QAAL,CAAc;AAAE2C,MAAAA;AAAF,KAAd;AACH;;AAEDF,EAAAA,aAAa,CAACG,CAAD,EAAG;AACZ,QAAI/C,GAAG,GAAG,KAAKH,KAAL,CAAWI,QAArB;AACAD,IAAAA,GAAG,CAAC+C,CAAC,CAACvD,MAAF,CAASyB,IAAV,CAAH,GAAmB8B,CAAC,CAACvD,MAAF,CAASO,KAA5B;AACA,SAAKI,QAAL,CAAc;AACVF,MAAAA,QAAQ,EAAGD;AADD,KAAd;AAGP,GA1D8C,CA2D3C;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACF;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAgEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAgD,EAAAA,MAAM,GAAE;AACJ,UAAMC,QAAQ,GAAG,KAAKpD,KAAL,CAAWqD,YAA5B;AADI,QAECzC,YAFD,GAEkB,KAAKZ,KAFvB,CAECY,YAFD;AAGR,UAAM0C,QAAQ,GAAG,KAAKtD,KAAL,CAAWuD,QAA5B;AAEA,UAAMC,eAAe,GAAGF,QAAQ,CAACzC,MAAT,CACtB4C,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,KAAK1D,KAAL,CAAW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","sourcesContent":["import React from \"react\"\r\nimport axios from \"axios\"\r\nimport {Modal,ModalHeader,ModalBody,ModalFooter, Button} from \"reactstrap\"\r\nimport apiconfig from \"../../../config/api.config.json\"\r\nimport Select from 'react-select'\r\n\r\nclass createsertifikasi extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            formdata: {\r\n                certificate_name: \"\",\r\n                publisher: \"\",\r\n                \r\n                // name: 'React',\r\n                // selectedOption: {},\r\n                // selectedOption2: {},\r\n                valid_start_year: \"\",\r\n                valid_start_month: \"\",\r\n                until_year: \"\",\r\n                until_month: \"\",\r\n                notes: \"\",\r\n                namerror: \"\"\r\n        \r\n                \r\n                \r\n             },\r\n            //  provinsi: [],\r\n            //  kota: [],\r\n            //  listKota: [],\r\n            //  listProvinsi: [],\r\n            //  selectedOption: {},\r\n            //  selectedOption2: {},\r\n            //  productsList: []\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this)\r\n        this.changeHandler = this.changeHandler.bind(this)\r\n        this.handleOnChange = this.handleOnChange.bind(this)\r\n    }\r\n  //   componentWillReceiveProps(newProps) {\r\n  //     this.setState({\r\n  //         productsList : newProps.productsList\r\n  //     })\r\n\r\n  // }\r\n  // onAddingItem = (i) => (event) => {\r\n  //   this.setState((state, props) => {\r\n  //     state.productsList[i].isChecked = !state.productsList[i].isChecked;\r\n  //     return {\r\n  //       productsList: state.productsList\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n    handleOnChange(values) {\r\n        this.setState({ values });\r\n    }\r\n\r\n    changeHandler(e){\r\n        let tmp = this.state.formdata\r\n        tmp[e.target.name]=e.target.value\r\n        this.setState({\r\n            formdata : tmp\r\n        })\r\n}\r\n    // handleChange1 = selectedOption => {\r\n    //     this.setState({ selectedOption });\r\n    //   };\r\n    \r\n    //   handleChange2 = selectedOption => {\r\n    //     this.setState({ selectedOption2: selectedOption });\r\n    //   };\r\n    \r\n    //   getProvinsi() {\r\n    //     let token = localStorage.getItem(apiconfig.ls.token);\r\n    //     let option = {\r\n    //       url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.provinsi,\r\n    //       method: \"get\",\r\n    //       headers: {\r\n    //         Authorization: token\r\n    //       }\r\n    //     };\r\n    \r\n    //     axios(option)\r\n    //       .then(response => {\r\n    //         let tmp = [];\r\n    \r\n    //         response.data.message.map(row => {\r\n    //           tmp.push({\r\n    //             value: row.kode_provinsi,\r\n    //             label: row.nama_provinsi\r\n    //           });\r\n    //         });\r\n    //         this.setState({\r\n    //           listProvinsi: tmp,\r\n    //           provinsi: response.data.message\r\n    //         });\r\n    //       })\r\n    //       .catch(error => {\r\n    //         alert(error);\r\n    //       });\r\n    //   }\r\n    \r\n      // getKota() {\r\n      //   let token = localStorage.getItem(apiconfig.ls.token);\r\n      //   let option = {\r\n      //     url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.kota,\r\n      //     method: \"get\",\r\n      //     headers: {\r\n      //       Authorization: token\r\n      //     }\r\n      //   };\r\n      //   axios(option)\r\n      //     .then(response => {\r\n      //       let tmp = [];\r\n    \r\n      //       response.data.message.map(row => {\r\n      //         tmp.push({\r\n      //           value: row.kode_kota,\r\n      //           label: row.nama_kota,\r\n      //           link: row.kode_provinsi\r\n      //         });\r\n      //       });\r\n      //       this.setState({\r\n      //         listKota: tmp,\r\n      //         kota: response.data.message\r\n      //       });\r\n      //       //alert(this.state.kota);\r\n      //     })\r\n      //     .catch(error => {\r\n      //       alert(error);\r\n      //     });\r\n      // }\r\n    \r\n      // componentDidMount() {\r\n      //   this.getProvinsi();\r\n      //   this.getKota();\r\n      // }\r\n    //   changeHandler= event => {\r\n        \r\n    //     let tmp = this.state.formdata\r\n    //     tmp[event.target.name] = event.target.value\r\n    //     tmp[\"kode_kota\"] = this.state.selectedOption2.value\r\n    //    tmp[\"kode_provinsi\"] = this.state.selectedOption.value\r\n    //     this.setState({\r\n    //         formdata: tmp\r\n            \r\n    //     })\r\n\r\n    // }\r\n\r\n    // validate() {\r\n\r\n    //     let namerror = \"\"\r\n\r\n    //     if (!this.state.formdata.kode_mahasiswa || !this.state.formdata.nama_mahasiswa || \r\n    //        !this.state.formdata.kode_agama || !this.state.formdata.kode_jurusan || \r\n    //        !this.state.formdata.jenis_kelamin   ) {\r\n    //         namerror = \"Anda Harus Mengisi Semua Field\"\r\n    //     }\r\n\r\n    //     if (namerror) {\r\n    //         this.state.formdata.nameError = namerror\r\n    //        // alert(namerror)\r\n    //         return false\r\n    //     }\r\n\r\n    //     return true\r\n    // }\r\n\r\n\r\n    submitHandler= event => {\r\n        event.preventDefault();\r\n        event.target.className += \" was-validated\";\r\n        const isValid = this.validate()\r\n\r\n\r\n        if (isValid == false) {\r\n       //   alert(this.state.formdata.nameError)\r\n        }else {\r\n          let kota = this.state.selectedOption2.value\r\n          let tmp = this.state.formdata\r\n          tmp.kode_kota = kota\r\n          this.setState({\r\n              formdata : tmp\r\n        })\r\n        let token = localStorage.getItem(apiconfig.ls.token)\r\n        let selectedProductsArray = this.state.productsList.filter((product, i)=>{\r\n            return product.isChecked});\r\n        let stringHobi = ''\r\n        \r\n\r\n        selectedProductsArray.map((row) => {\r\n            if (stringHobi !== '') {\r\n                stringHobi = stringHobi +', ' + row.name\r\n            } else {\r\n                stringHobi = row.name\r\n            }\r\n        })\r\n\r\n        tmp['hobi'] = stringHobi\r\n        \r\n        this.setState({\r\n            formdata : tmp\r\n        })\r\n \r\n\r\n        \r\n        let option = {\r\n            url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.x_sertifikasi,\r\n            method: \"post\",\r\n            headers:{\r\n                \"Authorization\": token,\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            data: this.state.formdata\r\n        }\r\n        axios (option)\r\n        .then((response) => {\r\n            if(response.data.code === 200){\r\n                alert (\"Sukses\")\r\n                this.props.sertifikasistatus()\r\n                // window.location.reload()\r\n            }\r\n          \r\n        })\r\n        .catch((error)=> {\r\n            console.log(error)\r\n            \r\n        })\r\n    }\r\n  }\r\n    // changeHandler(e){\r\n    //     let tmp = this.state.formdata\r\n    //     tmp[e.target.name] = e.target.value\r\n    //     tmp[\"kode_kota\"] = this.state.selectedOption2.value\r\n    //     tmp[\"kode_provinsi\"] = this.state.selectedOption.value\r\n    //     this.setState({\r\n    //         formdata: tmp\r\n    //     })\r\n    // }\r\n    // submitHandler(){\r\n    //     let token = localStorage.getItem(apiconfig.ls.token)\r\n    //     let option = {\r\n    //         url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.mahasiswa,\r\n    //         method: \"post\",\r\n    //         headers:{\r\n    //             \"Authorization\": token,\r\n    //             \"Content-Type\": \"application/json\"\r\n    //         },\r\n    //         data: this.state.formdata\r\n    //     }\r\n    //     axios(option)\r\n    //     .then((response) => {\r\n    //         if(response.data.code === 200){\r\n    //             alert(\"sukses\")\r\n    //             this.props.kodemahasiswastatus()\r\n    //             alert(JSON.stringify(this.state.formdata))\r\n    //         }\r\n    //     })\r\n    //     .catch((error) => {\r\n    //     alert(error)\r\n    //      } )\r\n    // }\r\n    \r\n    render(){\r\n        const options1 = this.state.listProvinsi;\r\n        let {productsList} =  this.state;\r\n    const options2 = this.state.listKota;\r\n    \r\n    const filteredOptions = options2.filter(\r\n      o => o.link === this.state.selectedOption.value\r\n    );\r\n          \r\n\r\n        return(\r\n            <Modal isOpen = {this.props.create} className = {this.props.className}>\r\n                <ModalHeader> create form</ModalHeader>\r\n                        <form\r\n                  className=\"needs-validation\"\r\n                  onSubmit={this.submitHandler}\r\n                  noValidate\r\n                >\r\n                <ModalBody>\r\n                {/* <form role=\"form\"> */}\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Kode Mahasiswa</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"kode_mahasiswa\"\r\n                value={this.state.formdata.kode_mahasiswa}\r\n                onChange={this.changeHandler}\r\n                required\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Nama Mahasiswa</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"nama_mahasiswa\"\r\n                value={this.state.formdata.nama_mahasiswa}\r\n                onChange={this.changeHandler}\r\n                required\r\n              />\r\n            </div>\r\n    \r\n            <div>\r\n        <p>Select one first</p>\r\n        <Select\r\n          name=\"kode_provinsi\"\r\n          value={this.state.selectedOption.kode_provinsi}\r\n          onChange={this.handleChange1}\r\n          options={options1}\r\n          required\r\n        />\r\n        <p>Then the other</p>\r\n        <Select\r\n          name=\"kode_kota\"\r\n          value={this.state.selectedOption2.kode_kota}\r\n          onChange={this.handleChange2}\r\n          options={filteredOptions}\r\n          required\r\n        />\r\n      </div>\r\n           \r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Kode Agama</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"kode_agama\"\r\n                value={this.state.formdata.kode_agama}\r\n                onChange={this.changeHandler}\r\n                required\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Kode Jurusan</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"kode_jurusan\"\r\n                value={this.state.formdata.kode_jurusan}\r\n                onChange={this.changeHandler}\r\n                required\r\n              />\r\n            </div>\r\n            <div md=\"4\" className=\"mb-3\">\r\n              <div className=\"custom-control custom-radio\">\r\n          <input\r\n            type=\"radio\"\r\n            className=\"custom-control-input\"\r\n            id=\"jeniskelamin1\"\r\n            name=\"jenis_kelamin\"\r\n            required\r\n            value=\"Laki-laki\"\r\n            checked={this.state.formdata.jenis_kelamin === 'Laki-laki'}\r\n            onChange={this.changeHandler}\r\n            required\r\n          />\r\n          <label\r\n            className=\"custom-control-label\"\r\n            htmlFor=\"jeniskelamin1\"\r\n          >\r\n            Laki-laki\r\n          </label>\r\n        </div>\r\n        <div className=\"custom-control custom-radio mb-3\">\r\n          <input\r\n            type=\"radio\"\r\n            className=\"custom-control-input\"\r\n            id=\"jeniskelamin2\"\r\n            name=\"jenis_kelamin\"\r\n            value=\"perempuan\"\r\n            checked={this.state.formdata.jenis_kelamin === 'perempuan'}\r\n            onChange={this.changeHandler}\r\n            required\r\n          />\r\n          <label\r\n            className=\"custom-control-label\"\r\n            htmlFor=\"jeniskelamin2\"\r\n          >\r\n            Perempuan\r\n          </label>\r\n          <div className=\"invalid-feedback\">\r\n            More example invalid feedback text\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n                            <label for=\"exampleInputEmail1\">Hobi</label>\r\n                            \r\n                            <table>\r\n                                <tbody>\r\n                                    { productsList.map((product, i) =>{\r\n                                        return(\r\n                                            <tr key={i+1}>\r\n                                                <td>{i+1}</td>\r\n                                                <td>{product.name}</td>\r\n                                                <td>\r\n                                                    <div class=\"checkbox checkbox-circle checkbox-color-scheme\">\r\n                                                        <label class=\"checkbox-checked\">\r\n                                                            <input \r\n                                                                type=\"checkbox\" \r\n                                                                value={product.name} \r\n                                                                checked={product.isChecked} \r\n                                                                onChange={this.onAddingItem(i)}/>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                    \r\n                                </tbody>\r\n                            </table>\r\n                        \r\n                        </div>\r\n          </div>\r\n            {/* <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Kode provinsi</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"kode_provinsi\"\r\n                value={this.state.formdata.kode_provinsi}\r\n                onChange={this.changeHandler}\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">alamat</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"alamat\"\r\n                value={this.state.formdata.alamat}\r\n                onChange={this.changeHandler}\r\n              />\r\n            </div> */}\r\n          \r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color = \"primary\" type = {this.submitHandler}  >save </Button>\r\n                    <Button color = \"warning\" onClick = {this.props.kodemahasiswastatus}> Cancel</Button>\r\n                    {/* <Button color = \"primary\" onClick = {this.submitHandler} >test </Button> */}\r\n                </ModalFooter>\r\n                </form>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nexport default createmahasiswa"]},"metadata":{},"sourceType":"module"}