{"ast":null,"code":"var _jsxFileName = \"D:\\\\220\\\\src\\\\components\\\\content\\\\m_sertifikasi\\\\edit_sertifikasi.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport apiconfig from \"../../../config/api.config.json\";\nimport Select from 'react-select';\n\nclass Editsertifikasi extends React.Component {\n  constructor(props) {\n    super(props); // let userdata = JSON.parse(localStorage.getItem(apiConfig.LS.USERDATA))\n\n    this.state = {\n      formdata: {\n        id: '',\n        create_by: '',\n        create_on: '',\n        modified_by: '',\n        modified_on: '',\n        deleted_by: '',\n        deleted_on: '',\n        is_delete: '',\n        biodata_id: '',\n        certificate_name: '',\n        publisher: \"\",\n        valid_start_year: \"\",\n        valid_start_month: \"\",\n        until_year: \"\",\n        until_month: \"\",\n        notes: '' //update_by:userdata.username\n\n      },\n      selectedOption: {},\n      selectedOption2: {},\n      selectedOption3: {},\n      selectedOption4: {}\n    };\n    this.submitHandler = this.submitHandler.bind(this);\n    this.changeHandler = this.changeHandler.bind(this);\n    this.handleChange1 = this.handleChange1.bind(this);\n  }\n\n  handleOnChange(selectedOption) {\n    this.setState({\n      selectedOption: selectedOption.value\n    });\n  }\n\n  handleOnChange(selectedOption2) {\n    this.setState({\n      selectedOption2: selectedOption2.value\n    });\n  }\n\n  handleOnChange(selectedOption3) {\n    this.setState({\n      selectedOption3: selectedOption3.value\n    });\n  }\n\n  handleOnChange(selectedOption4) {\n    this.setState({\n      selectedOption4: selectedOption4.value\n    });\n  }\n\n  componentDidMount() {\n    this.getLevel();\n  }\n\n  componentWillReceiveProps(newprops) {\n    this.setState({\n      formdata: newprops.listkeahlian,\n      selectValue: this.props.listkeahlian.skill_level_id\n    });\n  }\n\n  changeHandler(e) {\n    let tmp = this.state.formdata;\n    tmp[event.target.name] = event.target.value;\n    tmp[\"valid_start_year\"] = this.state.selectedOption.value;\n    tmp[\"valid_start_month\"] = this.state.selectedOption2.value;\n    tmp[\"until_year\"] = this.state.selectedOption3.value;\n    tmp[\"until_month\"] = this.state.selectedOption4.value;\n    this.setState({\n      formdata: tmp\n    });\n  }\n\n  submitHandler() {\n    let token = localStorage.getItem(apiconfig.LS.TOKEN);\n    let option = {\n      url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.KEAHLIAN,\n      method: 'put',\n      header: {\n        'Authorization': token,\n        'Content-Type': 'application/json'\n      },\n      data: this.state.formdata\n    };\n    axios(option).then(response => {\n      if (response.data.code === 200) {\n        alert('Success');\n        this.props.modalStatus();\n      } else {\n        alert(response.data.message);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const options1 = this.state.listLevel;\n    return React.createElement(Modal, {\n      isOpen: this.props.edit,\n      className: this.props.className,\n      className: \"modal-dialog modal-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      className: \"modal-title text-white\",\n      style: {\n        backgroundColor: '#00008B'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Edit Keahlian\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"skill_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Nama Keahlian\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      name: \"skill_name\",\n      value: this.props.listkeahlian.skill_name,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"skill_level_id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \" Level Kemampuan : \"), React.createElement(Select, {\n      placeholder: \"Level Kemampuan\",\n      name: \"skill_level_id\",\n      value: options1.filter(({\n        value\n      }) => value === this.props.listkeahlian.skill_level_id),\n      onChange: this.handleChange1,\n      options: options1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Catatan\"), React.createElement(\"textarea\", {\n      class: \"form-control\",\n      name: \"notes\",\n      rows: \"5\",\n      id: \"comment\",\n      value: this.props.listkeahlian.notes,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        backgroundColor: '#FFA500'\n      },\n      onClick: this.props.modalStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Close\"), React.createElement(Button, {\n      style: {\n        backgroundColor: '#00008B'\n      },\n      onClick: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Save\"))));\n  }\n\n}\n\nexport default Editsertifikasi;","map":{"version":3,"sources":["D:/220/src/components/content/m_sertifikasi/edit_sertifikasi.js"],"names":["React","axios","Modal","ModalHeader","ModalBody","ModalFooter","Button","apiconfig","Select","Editsertifikasi","Component","constructor","props","state","formdata","id","create_by","create_on","modified_by","modified_on","deleted_by","deleted_on","is_delete","biodata_id","certificate_name","publisher","valid_start_year","valid_start_month","until_year","until_month","notes","selectedOption","selectedOption2","selectedOption3","selectedOption4","submitHandler","bind","changeHandler","handleChange1","handleOnChange","setState","value","componentDidMount","getLevel","componentWillReceiveProps","newprops","listkeahlian","selectValue","skill_level_id","e","tmp","event","target","name","token","localStorage","getItem","LS","TOKEN","option","url","BASE_URL","ENDPOINTS","KEAHLIAN","method","header","data","then","response","code","alert","modalStatus","message","catch","error","console","log","render","options1","listLevel","edit","className","backgroundColor","skill_name","filter"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport axios from \"axios\"\r\nimport {Modal,ModalHeader,ModalBody,ModalFooter, Button} from \"reactstrap\"\r\nimport apiconfig from \"../../../config/api.config.json\"\r\nimport Select from 'react-select'\r\n\r\n\r\nclass Editsertifikasi extends React.Component{\r\n    constructor (props){\r\n        super(props)\r\n       // let userdata = JSON.parse(localStorage.getItem(apiConfig.LS.USERDATA))\r\n        this.state = {\r\n            formdata : {\r\n                id:'',\r\n                create_by:'',\r\n                create_on:'',\r\n                modified_by:'',\r\n                modified_on:'',\r\n                deleted_by:'',\r\n                deleted_on:'',\r\n                is_delete:'',\r\n                biodata_id: '',\r\n                certificate_name:'',\r\n                publisher: \"\",\r\n                valid_start_year: \"\",\r\n                valid_start_month: \"\",\r\n                until_year: \"\",\r\n                until_month: \"\",\r\n                notes:''\r\n                //update_by:userdata.username\r\n            },\r\n            selectedOption: {},\r\n             selectedOption2: {},\r\n             selectedOption3: {},\r\n             selectedOption4: {},\r\n\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this)\r\n        this.changeHandler = this.changeHandler.bind(this)\r\n        this.handleChange1 = this.handleChange1.bind(this)\r\n    \r\n    }\r\n\r\n    handleOnChange(selectedOption) {\r\n      this.setState({ selectedOption: selectedOption.value });\r\n  }\r\n  handleOnChange(selectedOption2) {\r\n    this.setState({ selectedOption2: selectedOption2.value });\r\n  }\r\n  handleOnChange(selectedOption3) {\r\n    this.setState({ selectedOption3: selectedOption3.value });\r\n  }\r\n  handleOnChange(selectedOption4) {\r\n    this.setState({ selectedOption4: selectedOption4.value });\r\n  }\r\n\r\n\r\n      componentDidMount() {\r\n        this.getLevel();\r\n      }\r\n\r\n\r\n      componentWillReceiveProps(newprops) {\r\n        this.setState({\r\n            formdata : newprops.listkeahlian,\r\n            selectValue: this.props.listkeahlian.skill_level_id,\r\n        })\r\n    }\r\n\r\n    changeHandler(e){\r\n      let tmp = this.state.formdata\r\n      tmp[event.target.name] = event.target.value\r\n      tmp[\"valid_start_year\"] = this.state.selectedOption.value\r\n     tmp[\"valid_start_month\"] = this.state.selectedOption2.value\r\n     tmp[\"until_year\"] = this.state.selectedOption3.value\r\n     tmp[\"until_month\"] = this.state.selectedOption4.value\r\n      this.setState({\r\n          formdata: tmp\r\n          \r\n      })\r\n\r\n  }\r\n\r\n    submitHandler(){\r\n        let token = localStorage.getItem(apiconfig.LS.TOKEN)\r\n        let option = {\r\n            url:apiconfig.BASE_URL+apiconfig.ENDPOINTS.KEAHLIAN, method: 'put',\r\n            header:{\r\n                'Authorization': token,\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            data:this.state.formdata\r\n        }\r\n        axios(option)\r\n        .then((response) =>{\r\n            if(response.data.code === 200) {\r\n            alert('Success')\r\n            this.props.modalStatus()\r\n        } else {\r\n            alert(response.data.message)\r\n        }\r\n    })\r\n\r\n    .catch((error) => {\r\n        console.log(error)\r\n    })\r\n}\r\n\r\nrender (){\r\n    const options1 = this.state.listLevel;\r\n    return(\r\n        <Modal isOpen = {this.props.edit} className={this.props.className} className = \"modal-dialog modal-lg\"> \r\n        <ModalHeader className = \"modal-title text-white\" style = {{backgroundColor:'#00008B'}}>Edit Keahlian</ModalHeader>\r\n        <ModalBody>\r\n        <form>\r\n                  <div class=\"row\">\r\n                    <div class=\"col\">\r\n                      <label for=\"skill_name\">Nama Keahlian</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                name=\"skill_name\"\r\n                                value={this.props.listkeahlian.skill_name}\r\n                                onChange={this.changeHandler}\r\n                            />\r\n                        </div>\r\n                          <div class=\"col\">\r\n                          <label for=\"skill_level_id\"> Level Kemampuan : </label>\r\n                            <Select\r\n                            placeholder=\"Level Kemampuan\" \r\n                            name=\"skill_level_id\"\r\n                            value={options1.filter(({ value }) => value === this.props.listkeahlian.skill_level_id)}\r\n                            onChange={this.handleChange1}\r\n                            options={options1}\r\n                            />\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n\r\n                    <div class=\"form-group\">\r\n                    <label for=\"comment\">Catatan</label>\r\n                    <textarea class=\"form-control\" \r\n                    name=\"notes\"\r\n                    rows=\"5\" id=\"comment\"\r\n                    value={this.props.listkeahlian.notes}\r\n                    onChange={this.changeHandler}\r\n                    />\r\n                  </div>\r\n            {/* <form role=\"form\">\r\n                    <div class=\"form-group\">\r\n                    <label for=\"skill_name\">Skill Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        name=\"skill_name\"\r\n                        value={this.props.listkeahlian.skill_name}\r\n                        onChange = {this.changeHandler}\r\n                        />\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                    <label for=\"skill_level_id\"> Level Kemampuan : </label>\r\n                            <Select\r\n                            placeholder=\"Level Kemampuan\" \r\n                            name=\"skill_level_id\"\r\n                            value={options1.filter(({ value }) => value === this.props.listkeahlian.skill_level_id)}\r\n                            onChange={this.handleChange1}\r\n                            options={options1}\r\n                            />\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                    <label for=\"notes\">Notes</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        name=\"notes\"\r\n                        value={this.props.listkeahlian.notes}\r\n                        onChange = {this.changeHandler}\r\n                        />\r\n                    </div>\r\n\r\n                    </form> */}\r\n\r\n                <ModalFooter>\r\n                    <Button style = {{backgroundColor:'#FFA500'}} onClick = {this.props.modalStatus}>Close</Button>\r\n                    <Button style = {{backgroundColor:'#00008B'}} onClick = {this.submitHandler}>Save</Button>\r\n                </ModalFooter>\r\n            </ModalBody>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n}\r\nexport default Editsertifikasi"]},"metadata":{},"sourceType":"module"}