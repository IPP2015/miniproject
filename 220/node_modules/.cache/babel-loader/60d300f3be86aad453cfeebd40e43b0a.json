{"ast":null,"code":"var _jsxFileName = \"D:\\\\data\\\\frontend220\\\\src\\\\components\\\\content\\\\mahasiswa\\\\editmahasiswa.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport apiconfig from \"../../../config/api.config.json\";\nimport Select from 'react-select';\n\nclass editmahasiswa extends React.Component {\n  constructor(props) {\n    super(props); //let userdata = JSON.parse(localStorage.getItem(apiconfig.ls.userdata))// untuk update data\n\n    this.handleChange1 = selectedOption => {\n      this.setState({\n        selectedValue: selectedOption.value\n      });\n      let tmp = this.state.formdata;\n      tmp[\"kode_provinsi\"] = selectedOption.value;\n    };\n\n    this.handleChange2 = selectedOption => {\n      this.setState({\n        selectedValue2: selectedOption.value\n      });\n      let tmp = this.state.formdata;\n      tmp[\"kode_kota\"] = selectedOption.value;\n    };\n\n    this.onAddingItem = i => event => {\n      this.setState((state, props) => {\n        this.props.productsList[i].isChecked = !this.props.productsList[i].isChecked;\n        return {\n          productsListNew: this.props.productsList\n        };\n      });\n    };\n\n    this.changeHandler = event => {\n      let tmp = this.state.formdata;\n      tmp[event.target.name] = event.target.value;\n      tmp[\"kode_kota\"] = this.state.selectedOption2.value;\n      tmp[\"kode_provinsi\"] = this.state.selectedOption.value;\n      this.setState({\n        formdata: tmp\n      });\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      event.target.className += \" was-validated\";\n      const isValid = this.validate();\n\n      if (isValid == false) {//   alert(this.state.formdata.nameError)\n      } else {\n        let kota = this.state.selectedOption2.value;\n        let tmp = this.state.formdata;\n        tmp.kode_kota = kota;\n        this.setState({\n          formdata: tmp\n        });\n        let token = localStorage.getItem(apiconfig.ls.token);\n        let selectedProductsArray = this.state.productsListNew.filter((product, i) => {\n          return product.isChecked;\n        });\n        let stringHobi = '';\n        selectedProductsArray.map(row => {\n          if (stringHobi !== '') {\n            stringHobi = stringHobi + ', ' + row.name;\n          } else {\n            stringHobi = row.name;\n          }\n        });\n        tmp['hobi'] = stringHobi;\n        this.setState({\n          formdata: tmp\n        });\n        let option = {\n          url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.mahasiswa,\n          method: \"put\",\n          headers: {\n            \"Authorization\": token,\n            \"Content-Type\": \"application/json\"\n          },\n          data: this.state.formdata\n        };\n        axios(option).then(response => {\n          if (response.data.code === 200) {\n            alert(\"Sukses\");\n            this.props.kodemahasiswastatus();\n            window.location.reload();\n          }\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    };\n\n    this.state = {\n      formdata: {\n        kode_mahasiswa: \"\",\n        nama_mahasiswa: \"\",\n        kode_kota: \"\",\n        kode_agama: \"\",\n        kode_jurusan: \"\",\n        kode_provinsi: \"\",\n        jenis_kelamin: \"\",\n        hobi: '',\n        namerror: \"\" // update_by : userdata.username\n\n      },\n      provinsi: [],\n      kota: [],\n      listKota: [],\n      listProvinsi: [],\n      selectedOption: {},\n      selectedOption2: {},\n      selectedValue: \"\",\n      selectedValue2: \"\",\n      productsListNew: []\n    };\n    this.submitHandler = this.submitHandler.bind(this);\n    this.changeHandler = this.changeHandler.bind(this);\n    this.handleOnChange = this.handleOnChange.bind(this);\n  }\n\n  getProvinsi() {\n    let token = localStorage.getItem(apiconfig.ls.token);\n    let option = {\n      url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.provinsi,\n      method: \"get\",\n      headers: {\n        Authorization: token\n      }\n    };\n    axios(option).then(response => {\n      let tmp = [];\n      response.data.message.map(row => {\n        tmp.push({\n          value: row.kode_provinsi,\n          label: row.nama_provinsi\n        });\n      });\n      this.setState({\n        listProvinsi: tmp,\n        provinsi: response.data.message\n      });\n    }).catch(error => {\n      alert(error);\n    });\n  }\n\n  getKota() {\n    let token = localStorage.getItem(apiconfig.ls.token);\n    let option = {\n      url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.kota,\n      method: \"get\",\n      headers: {\n        Authorization: token\n      }\n    };\n    axios(option).then(response => {\n      let tmp = [];\n      response.data.message.map(row => {\n        tmp.push({\n          value: row.kode_kota,\n          label: row.nama_kota,\n          link: row.kode_provinsi\n        });\n      });\n      this.setState({\n        listKota: tmp,\n        kota: response.data.message\n      }); //alert(this.state.kota);\n    }).catch(error => {\n      alert(error);\n    });\n  }\n\n  componentDidMount() {\n    this.getProvinsi();\n    this.getKota();\n  }\n\n  handleOnChange(values) {\n    this.setState({\n      values\n    });\n  }\n\n  validate() {\n    let namerror = \"\";\n\n    if (!this.state.formdata.kode_mahasiswa || !this.state.formdata.nama_mahasiswa || !this.state.formdata.kode_kota || !this.state.formdata.kode_agama || !this.state.formdata.kode_jurusan || !this.state.formdata.kode_provinsi || !this.state.formdata.jenis_kelamin) {\n      namerror = \"Anda Harus Mengisi Semua Field\";\n    }\n\n    if (namerror) {\n      this.state.formdata.nameError = namerror; // alert(namerror)\n\n      return false;\n    }\n\n    return true;\n  }\n\n  // submitHandler(){\n  //     let token = localStorage.getItem(apiconfig.ls.token)\n  //     let option = {\n  //         url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.mahasiswa,\n  //         method: \"put\",\n  //         headers:{\n  //             \"Authorization\": token,\n  //             \"Content-Type\": \"application/json\"\n  //         },\n  //         data: this.state.formdata\n  //     }\n  //     axios(option)\n  //     .then((response) => {\n  //         if(response.data.code === 200){\n  //             alert(\"sukses\")\n  //             this.props.kodemahasiswastatus()\n  //             alert(JSON.stringify(this.state.formdata))\n  //         }\n  //         else {\n  //             alert(response.data.message)\n  //         }\n  //     })\n  //     .catch((error) => {\n  //     alert(error)\n  //      } )\n  // }\n  changeHandler(e) {\n    let tmp = this.state.formdata;\n    tmp[e.target.name] = e.target.value; // tmp[\"kode_kota\"] = this.state.selectedOption2.value\n\n    this.setState({\n      formdata: tmp\n    });\n  }\n\n  render() {\n    const options1 = this.state.listProvinsi;\n    const options2 = this.state.listKota;\n    const filteredOptions = options2.filter(o => o.link === this.state.selectedValue);\n    return React.createElement(Modal, {\n      isOpen: this.props.edit,\n      className: this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \" edit form\"), React.createElement(\"form\", {\n      className: \"needs-validation\",\n      onSubmit: this.submitHandler,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"Kode Mahasiswa\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      name: \"kode_mahasiswa\",\n      value: this.state.formdata.kode_mahasiswa,\n      onChange: this.changeHandler,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"Nama Mahasiswa\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      name: \"nama_mahasiswa\",\n      value: this.state.formdata.nama_mahasiswa,\n      onChange: this.changeHandler,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"Select one first\"), React.createElement(Select, {\n      name: \"form-field-name\",\n      value: options1.filter(({\n        value\n      }) => value === this.props.listmahasiswa.kode_provinsi),\n      onChange: this.handleChange1,\n      options: options1,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"Then the other\"), React.createElement(Select, {\n      name: \"form-field-name\",\n      value: options2.filter(({\n        value\n      }) => value === this.props.listmahasiswa.kode_kota),\n      onChange: this.handleChange2,\n      options: filteredOptions,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, \"Kode Agama\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      name: \"kode_agama\",\n      value: this.state.formdata.kode_agama,\n      onChange: this.changeHandler,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"Kode Jurusan\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      name: \"kode_jurusan\",\n      value: this.state.formdata.kode_jurusan,\n      onChange: this.changeHandler,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      md: \"4\",\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-control custom-radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      className: \"custom-control-input\",\n      id: \"jeniskelamin1\",\n      name: \"jenis_kelamin\",\n      required: true,\n      value: \"Laki-laki\",\n      checked: this.state.formdata.jenis_kelamin === 'Laki-laki',\n      onChange: this.changeHandler,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"jeniskelamin1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, \"Laki-laki\")), React.createElement(\"div\", {\n      className: \"custom-control custom-radio mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      className: \"custom-control-input\",\n      id: \"jeniskelamin2\",\n      name: \"jenis_kelamin\",\n      value: \"perempuan\",\n      checked: this.state.formdata.jenis_kelamin === 'perempuan',\n      onChange: this.changeHandler,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"jeniskelamin2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, \"Perempuan\"), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, \"More example invalid feedback text\")), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, \" Hobi : \"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, this.props.productsList.map((product, i) => {\n      return React.createElement(\"tr\", {\n        key: i + 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, i + 1), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, product.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"checkbox checkbox-circle checkbox-color-scheme\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        class: \"checkbox-checked\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        value: product.name,\n        checked: product.isChecked,\n        onChange: this.onAddingItem(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      })))));\n    })))))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, \"save \"), React.createElement(Button, {\n      color: \"warning\",\n      onClick: this.props.kodemahasiswastatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, \" Cancel\"))));\n  }\n\n}\n\nexport default editmahasiswa;","map":{"version":3,"sources":["D:/data/frontend220/src/components/content/mahasiswa/editmahasiswa.js"],"names":["React","axios","Modal","ModalHeader","ModalBody","ModalFooter","Button","apiconfig","Select","editmahasiswa","Component","constructor","props","handleChange1","selectedOption","setState","selectedValue","value","tmp","state","formdata","handleChange2","selectedValue2","onAddingItem","i","event","productsList","isChecked","productsListNew","changeHandler","target","name","selectedOption2","submitHandler","preventDefault","className","isValid","validate","kota","kode_kota","token","localStorage","getItem","ls","selectedProductsArray","filter","product","stringHobi","map","row","option","url","BASE_URL","ENDPOINTS","mahasiswa","method","headers","data","then","response","code","alert","kodemahasiswastatus","window","location","reload","catch","error","console","log","kode_mahasiswa","nama_mahasiswa","kode_agama","kode_jurusan","kode_provinsi","jenis_kelamin","hobi","namerror","provinsi","listKota","listProvinsi","bind","handleOnChange","getProvinsi","Authorization","message","push","label","nama_provinsi","getKota","nama_kota","link","componentDidMount","values","nameError","e","render","options1","options2","filteredOptions","o","edit","listmahasiswa"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport axios from \"axios\"\r\nimport {Modal,ModalHeader,ModalBody,ModalFooter, Button} from \"reactstrap\"\r\nimport apiconfig from \"../../../config/api.config.json\"\r\nimport Select from 'react-select'\r\n\r\n\r\nclass editmahasiswa extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        //let userdata = JSON.parse(localStorage.getItem(apiconfig.ls.userdata))// untuk update data\r\n        this.state = {\r\n            formdata: {\r\n                kode_mahasiswa: \"\",\r\n                nama_mahasiswa: \"\",\r\n                kode_kota: \"\",\r\n                kode_agama: \"\",\r\n                kode_jurusan: \"\",\r\n                kode_provinsi: \"\",\r\n                jenis_kelamin: \"\",\r\n                hobi: '',\r\n                namerror: \"\"\r\n                \r\n               // update_by : userdata.username\r\n                \r\n               \r\n             },\r\n             provinsi: [],\r\n             kota: [],\r\n             listKota: [],\r\n             listProvinsi: [],\r\n             selectedOption: {},\r\n             selectedOption2: {},\r\n             selectedValue: \"\",\r\n             selectedValue2: \"\",\r\n             productsListNew: []\r\n        }\r\n        this.submitHandler = this.submitHandler.bind(this)\r\n        this.changeHandler = this.changeHandler.bind(this)\r\n        this.handleOnChange = this.handleOnChange.bind(this)\r\n    }\r\n    \r\n\r\n    handleChange1 = selectedOption => {\r\n        this.setState({ selectedValue: selectedOption.value });\r\n        let tmp = this.state.formdata\r\n        tmp [\"kode_provinsi\"] = selectedOption.value\r\n      };\r\n      handleChange2 = selectedOption => {\r\n        this.setState({ selectedValue2: selectedOption.value });\r\n        let tmp = this.state.formdata\r\n        tmp [\"kode_kota\"] = selectedOption.value\r\n      };\r\n      getProvinsi() {\r\n        let token = localStorage.getItem(apiconfig.ls.token);\r\n        let option = {\r\n          url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.provinsi,\r\n          method: \"get\",\r\n          headers: {\r\n            Authorization: token\r\n          }\r\n        };\r\n    \r\n        axios(option)\r\n          .then(response => {\r\n            let tmp = [];\r\n    \r\n            response.data.message.map(row => {\r\n              tmp.push({\r\n                value: row.kode_provinsi,\r\n                label: row.nama_provinsi\r\n              });\r\n            });\r\n            this.setState({\r\n              listProvinsi: tmp,\r\n              provinsi: response.data.message\r\n            });\r\n          })\r\n          .catch(error => {\r\n            alert(error);\r\n          });\r\n      }\r\n    \r\n      getKota() {\r\n        let token = localStorage.getItem(apiconfig.ls.token);\r\n        let option = {\r\n          url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.kota,\r\n          method: \"get\",\r\n          headers: {\r\n            Authorization: token\r\n          }\r\n        };\r\n        axios(option)\r\n          .then(response => {\r\n            let tmp = [];\r\n            response.data.message.map(row => {\r\n              tmp.push({\r\n                value: row.kode_kota,\r\n                label: row.nama_kota,\r\n                link: row.kode_provinsi\r\n              });\r\n            });\r\n            this.setState({\r\n              listKota: tmp,\r\n              kota: response.data.message\r\n            });\r\n            //alert(this.state.kota);\r\n          })\r\n          .catch(error => {\r\n            alert(error);\r\n          });\r\n      }\r\n    \r\n      componentDidMount() {\r\n        this.getProvinsi();\r\n        this.getKota();\r\n      }\r\n\r\n      \r\n      \r\n    onAddingItem = (i) => (event) => {\r\n      this.setState((state, props) => {\r\n          this.props.productsList[i].isChecked = !this.props.productsList[i].isChecked;\r\n        return {\r\n          productsListNew : this.props.productsList\r\n        }\r\n      })\r\n    }\r\n    handleOnChange(values) {\r\n      this.setState({ values });\r\n  }\r\n    \r\n    \r\n    changeHandler= event => {\r\n        \r\n      let tmp = this.state.formdata\r\n      tmp[event.target.name] = event.target.value\r\n      tmp[\"kode_kota\"] = this.state.selectedOption2.value\r\n     tmp[\"kode_provinsi\"] = this.state.selectedOption.value\r\n      this.setState({\r\n          formdata: tmp\r\n          \r\n      })\r\n\r\n  }\r\n\r\n  validate() {\r\n\r\n      let namerror = \"\"\r\n\r\n      if (!this.state.formdata.kode_mahasiswa || !this.state.formdata.nama_mahasiswa || !this.state.formdata.kode_kota || \r\n         !this.state.formdata.kode_agama || !this.state.formdata.kode_jurusan || !this.state.formdata.kode_provinsi ||\r\n         !this.state.formdata.jenis_kelamin  ) {\r\n          namerror = \"Anda Harus Mengisi Semua Field\"\r\n      }\r\n\r\n      if (namerror) {\r\n          this.state.formdata.nameError = namerror\r\n         // alert(namerror)\r\n          return false\r\n      }\r\n\r\n      return true\r\n  }\r\n\r\n\r\n  submitHandler= event => {\r\n      event.preventDefault();\r\n      event.target.className += \" was-validated\";\r\n      const isValid = this.validate()\r\n\r\n\r\n      if (isValid == false) {\r\n     //   alert(this.state.formdata.nameError)\r\n      }else {\r\n        let kota = this.state.selectedOption2.value\r\n        let tmp = this.state.formdata\r\n        tmp.kode_kota = kota\r\n        this.setState({\r\n            formdata : tmp\r\n      })\r\n      let token = localStorage.getItem(apiconfig.ls.token)\r\n      let selectedProductsArray = this.state.productsListNew.filter((product, i)=>{\r\n          return product.isChecked});\r\n      let stringHobi = ''\r\n      \r\n\r\n      selectedProductsArray.map((row) => {\r\n          if (stringHobi !== '') {\r\n              stringHobi = stringHobi +', ' + row.name\r\n          } else {\r\n              stringHobi = row.name\r\n          }\r\n      })\r\n\r\n      tmp['hobi'] = stringHobi\r\n      \r\n      this.setState({\r\n          formdata : tmp\r\n      })\r\n\r\n      \r\n      let option = {\r\n          url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.mahasiswa,\r\n          method: \"put\",\r\n          headers:{\r\n              \"Authorization\": token,\r\n              \"Content-Type\":\"application/json\"\r\n          },\r\n          data: this.state.formdata\r\n      }\r\n      axios (option)\r\n      .then((response) => {\r\n          if(response.data.code === 200){\r\n              alert (\"Sukses\")\r\n              this.props.kodemahasiswastatus()\r\n              window.location.reload()\r\n          }\r\n        \r\n      })\r\n      .catch((error)=> {\r\n          console.log(error)\r\n          \r\n      })\r\n  }\r\n}\r\n    // submitHandler(){\r\n    //     let token = localStorage.getItem(apiconfig.ls.token)\r\n    //     let option = {\r\n    //         url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.mahasiswa,\r\n    //         method: \"put\",\r\n    //         headers:{\r\n    //             \"Authorization\": token,\r\n    //             \"Content-Type\": \"application/json\"\r\n    //         },\r\n    //         data: this.state.formdata\r\n    //     }\r\n        \r\n    //     axios(option)\r\n    //     .then((response) => {\r\n    //         if(response.data.code === 200){\r\n    //             alert(\"sukses\")\r\n    //             this.props.kodemahasiswastatus()\r\n    //             alert(JSON.stringify(this.state.formdata))\r\n    //         }\r\n    //         else {\r\n    //             alert(response.data.message)\r\n    //         }\r\n    //     })\r\n    //     .catch((error) => {\r\n    //     alert(error)\r\n    //      } )\r\n    // }\r\n    changeHandler(e){\r\n        let tmp = this.state.formdata\r\n        tmp[e.target.name] = e.target.value\r\n        // tmp[\"kode_kota\"] = this.state.selectedOption2.value\r\n        this.setState({\r\n            formdata: tmp\r\n        })\r\n    }\r\n    render(){\r\n        const options1 = this.state.listProvinsi;\r\n\r\n    const options2 = this.state.listKota;\r\n    \r\n    const filteredOptions = options2.filter(\r\n      o => o.link === this.state.selectedValue\r\n    );\r\n        return(\r\n            <Modal isOpen = {this.props.edit} className = {this.props.className}>\r\n                <ModalHeader> edit form</ModalHeader>\r\n                <form\r\n                  className=\"needs-validation\"\r\n                  onSubmit={this.submitHandler}\r\n                  noValidate\r\n                >\r\n                <ModalBody>\r\n                \r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Kode Mahasiswa</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"kode_mahasiswa\"\r\n                value={this.state.formdata.kode_mahasiswa}\r\n                onChange={this.changeHandler}\r\n                required\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Nama Mahasiswa</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"nama_mahasiswa\"\r\n                value={this.state.formdata.nama_mahasiswa}\r\n                onChange={this.changeHandler}\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n        <p>Select one first</p>\r\n        <Select\r\n          name=\"form-field-name\"\r\n          value={options1.filter(({value}) => value === this.props.listmahasiswa.kode_provinsi)}\r\n          onChange={this.handleChange1}\r\n          options={options1}\r\n          required\r\n        />\r\n        <p>Then the other</p>\r\n        <Select\r\n          name=\"form-field-name\"\r\n          value={options2.filter(({value}) => value === this.props.listmahasiswa.kode_kota)}\r\n          onChange={this.handleChange2}\r\n          options={filteredOptions}\r\n          required\r\n        />\r\n      </div>\r\n           \r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Kode Agama</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"kode_agama\"\r\n                value={this.state.formdata.kode_agama}\r\n                onChange={this.changeHandler}\r\n                required\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Kode Jurusan</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"kode_jurusan\"\r\n                value={this.state.formdata.kode_jurusan}\r\n                onChange={this.changeHandler}\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div md=\"4\" className=\"mb-3\">\r\n              <div className=\"custom-control custom-radio\">\r\n          <input\r\n            type=\"radio\"\r\n            className=\"custom-control-input\"\r\n            id=\"jeniskelamin1\"\r\n            name=\"jenis_kelamin\"\r\n            required\r\n            value=\"Laki-laki\"\r\n            checked={this.state.formdata.jenis_kelamin === 'Laki-laki'}\r\n            onChange={this.changeHandler}\r\n            required\r\n          />\r\n          <label\r\n            className=\"custom-control-label\"\r\n            htmlFor=\"jeniskelamin1\"\r\n          >\r\n            Laki-laki\r\n          </label>\r\n        </div>\r\n        <div className=\"custom-control custom-radio mb-3\">\r\n          <input\r\n            type=\"radio\"\r\n            className=\"custom-control-input\"\r\n            id=\"jeniskelamin2\"\r\n            name=\"jenis_kelamin\"\r\n            value=\"perempuan\"\r\n            checked={this.state.formdata.jenis_kelamin === 'perempuan'}\r\n            onChange={this.changeHandler}\r\n            required\r\n          />\r\n          <label\r\n            className=\"custom-control-label\"\r\n            htmlFor=\"jeniskelamin2\"\r\n          >\r\n            Perempuan\r\n          </label>\r\n          <div className=\"invalid-feedback\">\r\n            More example invalid feedback text\r\n          </div>\r\n        </div>\r\n        <div class =\"form-group\">\r\n                            <label for=\"text\"> Hobi : </label>\r\n                            \r\n                            <table>\r\n                                <tbody>\r\n                                    { this.props.productsList.map((product, i) =>{\r\n                                        return(\r\n                                            <tr key={i+1}>\r\n                                                <td>{i+1}</td>\r\n                                                <td>{product.name}</td>\r\n                                                <td>\r\n                                                    <div class=\"checkbox checkbox-circle checkbox-color-scheme\">\r\n                                                        <label class=\"checkbox-checked\">\r\n                                                            <input type=\"checkbox\" \r\n                                                                value={product.name}\r\n                                                                checked={product.isChecked}\r\n                                                                onChange={this.onAddingItem(i)}\r\n                                                            />\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                    \r\n                                </tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n          </div>\r\n            {/* <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Kode provinsi</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"kode_provinsi\"\r\n                value={this.state.formdata.kode_provinsi}\r\n                onChange={this.changeHandler}\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">alamat</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"alamat\"\r\n                value={this.state.formdata.alamat}\r\n                onChange={this.changeHandler}\r\n              />\r\n            </div> */}\r\n         \r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color = \"primary\" type = \"submit\" >save </Button>\r\n                    <Button color = \"warning\" onClick = {this.props.kodemahasiswastatus}> Cancel</Button>\r\n                </ModalFooter>\r\n                </form>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default editmahasiswa\r\n"]},"metadata":{},"sourceType":"module"}